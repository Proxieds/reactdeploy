{"ast":null,"code":"import _asyncToGenerator from\"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/node_modules/@babel/runtime/regenerator/index.js\";import React from\"react\";import requests from\"../../requests\";import{Grid}from\"@mui/material\";import Post from\"../Inbox/Post\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PublicPosts=/*#__PURE__*/function(_React$Component){_inherits(PublicPosts,_React$Component);var _super=_createSuper(PublicPosts);function PublicPosts(props){var _this;_classCallCheck(this,PublicPosts);_this=_super.call(this,props);_this.getAllPosts=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,postPromises,postList;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return requests.get(\"authors/\".concat(_this.state.currentUser.id,\"/posts/\"),{headers:{Authorization:localStorage.getItem('access_token'),accept:'application/json'}});case 3:response=_context2.sent;// get list of likes for each post\npostPromises=response.data.items.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(item){var like_response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(item.type==='post')){_context.next=7;break;}_context.next=3;return requests.get(\"authors/\".concat(item.author.id,\"/posts/\").concat(item.id,\"/likes/\"));case 3:like_response=_context.sent;item.likes=like_response.data.items;item.likedByCurrent=false;// check if current viewer liked the post\nitem.likes.forEach(function(like){if(like.author===_this.state.currentUser.id){item.likedByCurrent=true;}});case 7:return _context.abrupt(\"return\",item);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());// wait for promises then set inbox list\n_context2.next=7;return Promise.all(postPromises);case 7:postList=_context2.sent;_this.setState({allPosts:postList});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));_this.initializeDetails=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return requests.get('get-user/',{headers:{Authorization:localStorage.getItem('access_token'),accept:'application/json'}});case 3:response=_context3.sent;_this.setState({currentUser:{id:response.data.id?response.data.id:'',url:response.data.url?response.data.url:'',host:response.data.host?response.data.host:'',displayName:response.data.displayName?response.data.displayName:'',github:response.data.github?response.data.github:'',profileImage:response.data.profileImage?response.data.profileImage:''}});_this.getAllPosts();_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));_this.state={currentUser:{},allPosts:{}};return _this;}_createClass(PublicPosts,[{key:\"componentDidMount\",value:function componentDidMount(){this.initializeDetails();}},{key:\"renderInboxItems\",value:function renderInboxItems(){var _this2=this;return this.state.allPosts.map(function(item){if(item.type==='post'){return/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(Post,{post:item,currentUser:_this2.state.currentUser,likes:item.likes,likedByCurrent:item.likedByCurrent,isPublic:item.visibility==='PUBLIC'&&item.viewableBy===''})});}});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"PublicPosts\",children:[/*#__PURE__*/_jsx(Grid,{container:true,p:2,justifyContent:\"center\",alignItem:\"center\",direction:\"column\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,justifyContent:\"center\",alignItem:\"center\",children:this.state.allPosts.length?this.renderInboxItems():/*#__PURE__*/_jsx(\"h2\",{children:\"Inbox is empty\"})})]});}}]);return PublicPosts;}(React.Component);export default PublicPosts;","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/PublicPosts.js"],"names":["React","requests","Grid","Post","PublicPosts","props","getAllPosts","get","state","currentUser","id","headers","Authorization","localStorage","getItem","accept","response","postPromises","data","items","map","item","type","author","like_response","likes","likedByCurrent","forEach","like","Promise","all","postList","setState","allPosts","console","log","initializeDetails","url","host","displayName","github","profileImage","visibility","viewableBy","length","renderInboxItems","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport requests from \"../../requests\";\nimport { Grid } from \"@mui/material\";\nimport Post from \"../Inbox/Post\";\n\n  \nclass PublicPosts extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        currentUser: {},\n        allPosts: {},\n    }\n}\n\n  componentDidMount() {\n      this.initializeDetails();\n  }\n\n  getAllPosts = async () => {\n    try {\n        // Get all the author details\n        const response = await requests.get(`authors/${this.state.currentUser.id}/posts/`, {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n        }});\n        \n        // get list of likes for each post\n        const postPromises = response.data.items.map(async (item) => {\n          if (item.type === 'post') {\n            const like_response = await requests.get(`authors/${item.author.id}/posts/${item.id}/likes/`);\n            item.likes = like_response.data.items;\n            item.likedByCurrent = false;\n            // check if current viewer liked the post\n            item.likes.forEach((like) => {\n              if (like.author === this.state.currentUser.id) {\n                item.likedByCurrent = true;\n              }\n            })\n          }\n          return item;\n        })\n        // wait for promises then set inbox list\n        const postList = await Promise.all(postPromises)\n        this.setState({ allPosts: postList });\n    } catch(error) {\n        console.log(error)\n    }\n  }\n\n  initializeDetails = async () => {\n      try {\n          // Get the author details\n          const response = await requests.get('get-user/', {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n          }});\n          this.setState({ currentUser: {\n              id: response.data.id ? response.data.id : '',\n              url: response.data.url ? response.data.url : '',\n              host: response.data.host ? response.data.host : '',\n              displayName: response.data.displayName ? response.data.displayName : '',\n              github: response.data.github ? response.data.github : '',\n              profileImage: response.data.profileImage ? response.data.profileImage : ''\n          }});\n\n        this.getAllPosts();\n\n      } catch(error) {\n          console.log(error)\n      }\n  }\n\n  renderInboxItems() {\n    return this.state.allPosts.map((item) => {\n        if (item.type === 'post') {\n          return (\n            <Grid item xs={8}>\n              <Post   \n              post= {item}\n              currentUser={this.state.currentUser}\n              likes={item.likes}\n              likedByCurrent={item.likedByCurrent}\n              isPublic={item.visibility === 'PUBLIC' && item.viewableBy === ''}\n              />\n            </Grid>\n          );\n        }\n    });\n  }\n\n  render(){\n      return (\n          <div className=\"PublicPosts\">\n            <Grid container p={2}\n            justifyContent=\"center\"\n            alignItem=\"center\"\n            direction=\"column\">\n            </Grid>\n          <Grid container spacing={2} justifyContent=\"center\" alignItem=\"center\">\n            {this.state.allPosts.length ? this.renderInboxItems() : <h2>Inbox is empty</h2>}\n          </Grid>\n          </div>\n      )\n  }\n}\n\nexport default PublicPosts;\n"]},"metadata":{},"sourceType":"module"}