{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/Register.js\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport { Button, TextField, Alert, AlertTitle } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      registration_error: false,\n      registration_success: false,\n      error_messages: \"\"\n    };\n\n    this.validateRegister = async () => {\n      if (!this.state.username) {\n        this.setState({\n          registration_error: true\n        });\n        this.setState({\n          registration_success: false\n        });\n        this.setState({\n          error_messages: \"Username is empty\"\n        });\n        return false;\n      }\n\n      if (!this.state.password) {\n        this.setState({\n          registration_error: true\n        });\n        this.setState({\n          registration_success: false\n        });\n        this.setState({\n          error_messages: \"Password is Empty\"\n        });\n        return false;\n      }\n\n      if (!this.state.password == this.state.confirm_password) {\n        this.setState({\n          registration_error: true\n        });\n        this.setState({\n          registration_success: false\n        });\n        this.setState({\n          error_messages: \"Passwords do not Match\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleRegister = async () => {\n      if (this.validateRegister() == true) {\n        // const response = await requests.post(`service/register/`, {\n        //     username: this.state.username,\n        //     password: this.state.password\n        // });\n        // this.setState({registration_success: true})\n        console.log(\"CREATED\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [this.state.registration_success && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"alert\",\n          severity: \"success\",\n          children: /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account Successfully Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 45\n        }, this), this.state.registration_error && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"alert\",\n          severity: \"error\",\n          children: /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: this.state.error_messages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Social Distributions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a new account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            label: \"Username\",\n            value: this.state.username,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return this.setState({\n                username: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            type: \"password\",\n            label: \"Password\",\n            value: this.state.password,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return this.setState({\n                password: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            value: this.state.confirm_password,\n            onChange: _ref3 => {\n              let {\n                target\n              } = _ref3;\n              return this.setState({\n                confirm_password: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: this.state.loginBtnDisabled,\n            color: \"primary\",\n            variant: \"contained\",\n            onClick: this.handleRegister,\n            ref: node => this.btn = node,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              textDecoration: 'none',\n              position: 'relative',\n              top: '30px'\n            },\n            to: \"/\",\n            children: \"Have an account? Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/Register.js"],"names":["React","useEffect","useState","Component","Button","TextField","Alert","AlertTitle","requests","NavLink","Register","state","username","password","confirm_password","registration_error","registration_success","error_messages","validateRegister","setState","handleRegister","console","log","render","target","value","loginBtnDisabled","node","btn","textDecoration","position","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\nimport {\n    Button,\n    TextField,\n    Alert,\n    AlertTitle\n  } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport { NavLink } from \"react-router-dom\";\n  \nclass Register extends Component {\n    state = {\n          username: \"\",\n          password: \"\",\n          confirm_password: \"\",\n          registration_error: false,\n          registration_success: false,\n          error_messages: \"\"\n      }\n\n    validateRegister = async () => {\n        if (!this.state.username) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Username is empty\"})\n            return false\n        }\n        if (!this.state.password) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Password is Empty\"})\n            return false\n        }\n        if (!this.state.password == this.state.confirm_password) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Passwords do not Match\"})\n            return false\n        }\n        return true;\n    }\n\n    handleRegister = async () => {\n        if(this.validateRegister() == true) {\n            // const response = await requests.post(`service/register/`, {\n            //     username: this.state.username,\n            //     password: this.state.password\n            // });\n            // this.setState({registration_success: true})\n            console.log(\"CREATED\")\n        }\n    }\n\n  render() {\n      return (\n          <body className=\"background\">\n          <div className=\"login-form\">\n          {this.state.registration_success&&<Alert className=\"alert\"  severity=\"success\">\n                <AlertTitle><strong>Account Successfully Created</strong></AlertTitle>\n            </Alert>}\n            {this.state.registration_error&&<Alert className=\"alert\"  severity=\"error\">\n                <AlertTitle><strong>{this.state.error_messages}</strong></AlertTitle>\n            </Alert>}\n            <h1>\n                Social Distributions\n            </h1>\n            <h3>\n                Create a new account\n            </h3>\n            <div className=\"login-wrapper\">\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Username\"\n                value={this.state.username}\n                onChange={({ target }) =>\n                this.setState({\n                username: target.value\n                })}\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                type=\"password\"\n                label=\"Password\"\n                value={this.state.password}\n                onChange={({ target }) =>\n                this.setState({\n                password: target.value\n                })}\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                type=\"password\"\n                label=\"Confirm Password\"\n                value={this.state.confirm_password}\n                onChange={({ target }) =>\n                this.setState({\n                confirm_password: target.value\n                })}\n            />\n            {/* {this.state.username_error&&<div>HI</div>} */}\n            <br/>\n            <Button\n                disabled={this.state.loginBtnDisabled}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={this.handleRegister}\n                ref={node => (this.btn = node)}>\n              Register\n            </Button>\n            <NavLink style={{ textDecoration: 'none', position: 'relative', top: '30px' }} to=\"/\">Have an account? Log in</NavLink>\n            </div>\n          </div>\n          </body>\n        );\n    }\n}\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}