{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/AddComment.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport './CommentDialog.css';\nimport requests from '../../requests';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddComment(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = () => {\n    console.log(props.post_id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleClickOpen,\n      endIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 70\n      }, this),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      minWidth: \"800px\",\n      maxWidth: \"800px\",\n      hideBackdrop: true,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: \"comment-dialog\",\n        children: \"Edit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          defaultValue: \"Normal\",\n          placeholder: \"I'm a placeholder\",\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Comment\",\n          type: \"email\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: comment,\n          onChange: event => {\n            setComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEdit,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddComment, \"hRzrfQkUsDAOqHrGQGVA1V/cjkE=\");\n\n_c = AddComment;\nexport function AddCommentListItem(props) {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setComment('');\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSend = async () => {\n    // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n    try {\n      const response = await requests.post(`service/authors/${props.post_author}/posts/${props.post_id}/comments/`, {\n        post_id: props.post_id,\n        comment: comment,\n        contentType: \"text/markdown\",\n        author: props.current_author,\n        type: \"comment\"\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n      sendToSelf(response.data); // send to recipients inbox\n\n      const response_recipient = await requests.post(`service/authors/${props.post_author}/inbox/`, response.data, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    handleClose();\n  };\n\n  const sendToSelf = async my_item => {\n    const response_self = await requests.post(`service/authors/${props.current_author}/inbox/`, my_item, {\n      headers: {\n        Authorization: localStorage.getItem('access_token'),\n        accept: 'application/json'\n      }\n    }, {\n      withCredentials: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      autoFocus: true,\n      button: true,\n      onClick: () => handleClickOpen(),\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      minWidth: \"800px\",\n      maxWidth: \"800px\",\n      hideBackdrop: true,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: \"comment-dialog\",\n        children: \"Add new comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          defaultValue: \"Normal\",\n          placeholder: \"Write a comment...\",\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Comment\",\n          type: \"email\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: comment,\n          onChange: event => {\n            setComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(AddCommentListItem, \"hRzrfQkUsDAOqHrGQGVA1V/cjkE=\");\n\n_c2 = AddCommentListItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddComment\");\n$RefreshReg$(_c2, \"AddCommentListItem\");","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/AddComment.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","requests","EditIcon","ListItem","ListItemAvatar","ListItemText","Avatar","AddIcon","AddComment","props","open","setOpen","useState","comment","setComment","handleClickOpen","handleClose","handleEdit","console","log","post_id","event","target","value","AddCommentListItem","handleSend","response","post","post_author","contentType","author","current_author","type","headers","Authorization","localStorage","getItem","accept","withCredentials","sendToSelf","data","response_recipient","e","my_item","response_self"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport './CommentDialog.css';\nimport requests from '../../requests';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport function AddComment(props) {\n  const [open, setOpen] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = () => {\n      console.log(props.post_id);\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClickOpen} endIcon={<EditIcon />}>\n        Edit\n      </Button>\n      <Dialog open={open} minWidth=\"800px\" maxWidth=\"800px\" hideBackdrop={true} onClose={handleClose}>\n        <DialogTitle className=\"comment-dialog\">Edit Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue=\"Normal\"\n            placeholder=\"I'm a placeholder\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Comment\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={comment}\n            onChange={(event) => {setComment(event.target.value)}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleEdit}>Send</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport function AddCommentListItem(props) {\n    const [open, setOpen] = React.useState(false);\n    const [comment, setComment] = React.useState('');\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n      setComment('');\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const handleSend = async () => {\n        // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n        try {\n            const response = await requests.post(`service/authors/${props.post_author}/posts/${props.post_id}/comments/`,\n              {\n              post_id: props.post_id,\n              comment: comment,\n              contentType: \"text/markdown\",\n              author: props.current_author,\n              type: \"comment\"\n              },\n              {headers: {\n                  Authorization: localStorage.getItem('access_token'),\n                  accept: 'application/json',\n                }\n              },\n              {withCredentials: true});\n            sendToSelf(response.data);\n            // send to recipients inbox\n            const response_recipient = await requests.post(`service/authors/${props.post_author}/inbox/`,\n            response.data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }\n            },\n          {withCredentials: true})\n        } catch(e) {\n          console.log(e)\n        }\n        handleClose();\n    }\n  \n    const sendToSelf = async (my_item) => {\n      const response_self = await requests.post(\n        `service/authors/${props.current_author}/inbox/`,\n        my_item,\n        {headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json',\n        }},\n        {withCredentials:true});\n    };\n  \n    return (\n      <div>\n        <ListItem autoFocus button onClick={() => handleClickOpen()}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add Comment\" />\n        </ListItem>\n        <Dialog open={open} minWidth=\"800px\" maxWidth=\"800px\" hideBackdrop={true} onClose={handleClose}>\n        <DialogTitle className=\"comment-dialog\">Add new comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue=\"Normal\"\n            placeholder=\"Write a comment...\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Comment\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={comment}\n            onChange={(event) => {setComment(event.target.value)}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSend}>Send</Button>\n        </DialogActions>\n      </Dialog>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}