{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js\";\nimport React, { useState } from \"react\";\nimport requests from \"../../requests\";\nimport './Post.css';\nimport { Alert, Avatar, Button, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, ImageListItem, TextField, SimpleDialog, Typography } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown';\nimport ThumbUp from '@mui/icons-material/ThumbUp';\nimport Send from '@mui/icons-material/Send';\nimport PropTypes from 'prop-types';\nimport List from '@mui/material/List';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport { blue } from '@mui/material/colors'; // assuming props contains all the post attributes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  var _s = $RefreshSig$();\n\n  function SimpleDialog(props) {\n    _s();\n\n    const {\n      onClose,\n      selectedValue,\n      open\n    } = props;\n\n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n\n    const handleListItemClick = value => {\n      onClose(value);\n    };\n\n    const [error, setError] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\");\n    const [modalShow, setModalShow] = useState(false);\n\n    const styles = theme => ({\n      listItemText: {\n        fontSize: '1'\n      }\n    });\n\n    const like = async () => {\n      // send POST request to authors/{authorId}/inbox/ with a like\n      console.log('clicked like');\n\n      try {\n        const data = {\n          summary: `${props.currentUser.displayName} likes your post.`,\n          type: \"Like\",\n          author: props.currentUser.id,\n          _object: `${props.author.id}/posts/${props.post.id}`\n        };\n        const response = await requests.post(`service/authors/${props.author.id}/inbox/`, data, {\n          headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json'\n          }\n        }, {\n          withCredentials: true\n        }); // change summary of like, to send like to your own inbox\n\n        data.summary = `You liked ${props.author.displayName}'s post.`;\n        sendToSelf(data);\n      } catch (e) {\n        console.log(e);\n        setError(\"Failed to send like.\");\n      }\n    };\n\n    const comment = async () => {\n      // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n      console.log('clicked comment');\n\n      try {\n        const response = await requests.post(`service/authors/${props.author.id}/posts/${props.post.id}/comments/`, {\n          post_id: props.post.id,\n          comment: commentText,\n          contentType: \"text/markdown\",\n          author: props.currentUser.id,\n          type: \"comment\"\n        }, {\n          headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json'\n          }\n        }, {\n          withCredentials: true\n        });\n        sendToSelf(response.data); // send to recipients inbox\n\n        const response_recipient = await requests.post(`service/authors/${props.author.id}/inbox/`, response.data, {\n          headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json'\n          }\n        }, {\n          withCredentials: true\n        });\n      } catch (e) {\n        setError(\"Failed to send comment.\");\n        console.log(e);\n      }\n    };\n\n    const sendToSelf = async my_item => {\n      const response_self = await requests.post(`service/authors/${props.currentUser.id}/inbox/`, my_item, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        id: \"title\",\n        primaryTypographyProps: {\n          fontSize: '30px'\n        },\n        primary: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: \"author\",\n        primary: \"By: \" + props.author.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), props.contentType == \"text/markdown\" && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 50\n      }, this), props.contentType == \"text/plain\" && /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 49\n      }, this), (props.contentType == \"application/base64\" || props.contentType == \"image/png;base64\" || props.contentType == \"image/jpeg;base64\") && /*#__PURE__*/_jsxDEV(ImageListItem, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 144\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: \"description\",\n        primary: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"comment-like-section\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"like-button\",\n          startIcon: /*#__PURE__*/_jsxDEV(ThumbUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 24\n          }, this),\n          onClick: like,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"comment-section\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"commentBox\",\n            label: \"Comment\",\n            variant: \"filled\",\n            defaultValue: \"\",\n            onChange: e => {\n              setCommentText(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"comment-button\",\n            startIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 28\n            }, this),\n            onClick: comment,\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: \"div\",\n            children: [\"Selected: \", selectedValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleClickOpen,\n            children: \"Open simple dialog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n            selectedValue: selectedValue,\n            open: open,\n            onClose: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(SimpleDialog, \"TXIpIvSmxT9AFxyeVXo3oaXDZRo=\");\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js"],"names":["React","useState","requests","Alert","Avatar","Button","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","ImageListItem","TextField","SimpleDialog","Typography","ReactMarkdown","ThumbUp","Send","PropTypes","List","DialogTitle","Dialog","PersonIcon","AddIcon","blue","Post","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","error","setError","commentText","setCommentText","modalShow","setModalShow","styles","theme","listItemText","fontSize","like","console","log","data","summary","currentUser","displayName","type","author","id","_object","post","response","headers","Authorization","localStorage","getItem","accept","withCredentials","sendToSelf","e","comment","post_id","contentType","response_recipient","my_item","response_self","title","content","description","target","handleClickOpen"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport requests from \"../../requests\";\nimport './Post.css'\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        ImageListItem,\n        TextField,\n        SimpleDialog,\n        Typography\n        } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown'\nimport ThumbUp from '@mui/icons-material/ThumbUp'\nimport Send from '@mui/icons-material/Send'\nimport PropTypes from 'prop-types';\nimport List from '@mui/material/List';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport { blue } from '@mui/material/colors';\n\n// assuming props contains all the post attributes\nexport default function Post(props) {\n  function SimpleDialog(props) {\n    const { onClose, selectedValue, open } = props;\n  \n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n  \n    const handleListItemClick = (value) => {\n      onClose(value);\n    };\n\n    const [error, setError] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\")\n    const [modalShow, setModalShow] = useState(false);\n    const styles = theme => ({\n        listItemText:{\n          fontSize: '1',\n        }\n      });\n\n    const like = async () => {\n        // send POST request to authors/{authorId}/inbox/ with a like\n        console.log('clicked like');\n        try {\n          const data = {\n            summary: `${props.currentUser.displayName} likes your post.`,\n            type: \"Like\",\n            author: props.currentUser.id,\n            _object: `${props.author.id}/posts/${props.post.id}`\n          }\n\n          const response = await requests.post(`service/authors/${props.author.id}/inbox/`,\n            data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }},\n            {withCredentials: true});\n          \n          // change summary of like, to send like to your own inbox\n          data.summary = `You liked ${props.author.displayName}'s post.`\n          sendToSelf(data);\n        } catch (e) {\n          console.log(e)\n          setError(\"Failed to send like.\");\n        }   \n    }\n\n    const comment = async () => {\n        // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n        console.log('clicked comment')\n        try {\n            const response = await requests.post(`service/authors/${props.author.id}/posts/${props.post.id}/comments/`,\n              {\n              post_id: props.post.id,\n              comment: commentText,\n              contentType: \"text/markdown\",\n              author: props.currentUser.id,\n              type: \"comment\"\n              },\n              {headers: {\n                  Authorization: localStorage.getItem('access_token'),\n                  accept: 'application/json',\n                }\n              },\n              {withCredentials: true});\n            sendToSelf(response.data);\n            // send to recipients inbox\n            const response_recipient = await requests.post(`service/authors/${props.author.id}/inbox/`,\n            response.data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }\n            },\n          {withCredentials: true})\n        } catch(e) {\n          setError(\"Failed to send comment.\");\n          console.log(e)\n        }   \n    }\n  \n    const sendToSelf = async (my_item) => {\n      const response_self = await requests.post(\n        `service/authors/${props.currentUser.id}/inbox/`,\n        my_item,\n        {headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json',\n        }},\n        {withCredentials:true});\n    };\n\n\n    return (\n      <ListItem>\n        <ListItemText\n          id=\"title\"\n          primaryTypographyProps={{fontSize: '30px'}}\n          primary={props.title}\n        />\n        <ListItemText\n          id=\"author\"\n          primary={\"By: \" + props.author.displayName}\n        />\n        {props.contentType == \"text/markdown\" && <ReactMarkdown>\n          {props.content}\n          </ReactMarkdown>}\n        {(props.contentType == \"text/plain\") && <ListItemText\n          primary={props.content}\n        />}\n        {(props.contentType == \"application/base64\" || props.contentType == \"image/png;base64\" || props.contentType == \"image/jpeg;base64\") && <ImageListItem\n          children={<img src={props.content}></img>}\n        />}\n        <ListItemText\n          id=\"description\"\n          primary={props.description}\n        />\n        <div id=\"comment-like-section\">\n            <Button \n            id=\"like-button\"\n            startIcon={<ThumbUp />}\n            onClick={like}>\n                Like\n            </Button>\n            <span id=\"comment-section\">\n                <TextField id=\"commentBox\" label=\"Comment\" variant=\"filled\" defaultValue=\"\" onChange={e => {setCommentText(e.target.value)}}/>\n                <Button\n                id=\"comment-button\" \n                startIcon={<Send />}\n                onClick={comment}>\n                    Comment\n                </Button>\n                <Typography variant=\"subtitle1\" component=\"div\">\n                  Selected: {selectedValue}\n                </Typography>\n                <br />\n                <Button variant=\"outlined\" onClick={handleClickOpen}>\n                  Open simple dialog\n                </Button>\n                <SimpleDialog\n                  selectedValue={selectedValue}\n                  open={open}\n                  onClose={handleClose}\n                />\n            </span>\n        </div>\n      </ListItem>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}