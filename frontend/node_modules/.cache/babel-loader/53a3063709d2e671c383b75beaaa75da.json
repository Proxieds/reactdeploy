{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport requests from \"../../requests\";\nimport './Post.css';\nimport { Alert, Avatar, Button, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, ImageListItem, TextField, Modal } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown';\nimport ThumbUp from '@mui/icons-material/ThumbUp';\nimport Send from '@mui/icons-material/Send'; // assuming props contains all the post attributes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [commentText, setCommentText] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n\n  const styles = theme => ({\n    listItemText: {\n      fontSize: '1'\n    }\n  });\n\n  const like = async () => {\n    // send POST request to authors/{authorId}/inbox/ with a like\n    console.log('clicked like');\n\n    try {\n      const data = {\n        summary: `${props.currentUser.displayName} likes your post.`,\n        type: \"Like\",\n        author: props.currentUser.id,\n        _object: `${props.author.id}/posts/${props.post.id}`\n      };\n      const response = await requests.post(`service/authors/${props.author.id}/inbox/`, data, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      }); // change summary of like, to send like to your own inbox\n\n      data.summary = `You liked ${props.author.displayName}'s post.`;\n      sendToSelf(data);\n    } catch (e) {\n      console.log(e);\n      setError(\"Failed to send like.\");\n    }\n  };\n\n  const comment = async () => {\n    // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n    console.log('clicked comment');\n\n    try {\n      const response = await requests.post(`service/authors/${props.author.id}/posts/${props.post.id}/comments/`, {\n        post_id: props.post.id,\n        comment: commentText,\n        contentType: \"text/markdown\",\n        author: props.currentUser.id,\n        type: \"comment\"\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n      sendToSelf(response.data); // send to recipients inbox\n\n      const response_recipient = await requests.post(`service/authors/${props.author.id}/inbox/`, response.data, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n    } catch (e) {\n      setError(\"Failed to send comment.\");\n      console.log(e);\n    }\n  };\n\n  const sendToSelf = async my_item => {\n    const response_self = await requests.post(`service/authors/${props.currentUser.id}/inbox/`, my_item, {\n      headers: {\n        Authorization: localStorage.getItem('access_token'),\n        accept: 'application/json'\n      }\n    }, {\n      withCredentials: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n      id: \"title\",\n      primaryTypographyProps: {\n        fontSize: '30px'\n      },\n      primary: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      id: \"author\",\n      primary: \"By: \" + props.author.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), props.contentType == \"text/markdown\" && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 50\n    }, this), props.contentType == \"text/plain\" && /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 49\n    }, this), (props.contentType == \"application/base64\" || props.contentType == \"image/png;base64\" || props.contentType == \"image/jpeg;base64\") && /*#__PURE__*/_jsxDEV(ImageListItem, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 144\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      id: \"description\",\n      primary: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-like-section\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"like-button\",\n        startIcon: /*#__PURE__*/_jsxDEV(ThumbUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }, this),\n        onClick: like,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"commentBox\",\n          label: \"Comment\",\n          variant: \"filled\",\n          defaultValue: \"\",\n          onChange: e => {\n            setCommentText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"comment-button\",\n          startIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 28\n          }, this),\n          onClick: comment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOpen,\n          children: \"Open modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"modal-modal-title\",\n          \"aria-describedby\": \"modal-modal-description\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              id: \"modal-modal-title\",\n              variant: \"h6\",\n              component: \"h2\",\n              children: \"Text in a modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              id: \"modal-modal-description\",\n              sx: {\n                mt: 2\n              },\n              children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Post, \"TXIpIvSmxT9AFxyeVXo3oaXDZRo=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js"],"names":["React","useState","requests","Alert","Avatar","Button","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","ImageListItem","TextField","Modal","ReactMarkdown","ThumbUp","Send","Post","props","error","setError","commentText","setCommentText","modalShow","setModalShow","styles","theme","listItemText","fontSize","like","console","log","data","summary","currentUser","displayName","type","author","id","_object","post","response","headers","Authorization","localStorage","getItem","accept","withCredentials","sendToSelf","e","comment","post_id","contentType","response_recipient","my_item","response_self","title","content","description","target","value","handleOpen","open","handleClose","style","mt"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport requests from \"../../requests\";\nimport './Post.css'\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        ImageListItem,\n        TextField,\n        Modal\n        } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown'\nimport ThumbUp from '@mui/icons-material/ThumbUp'\nimport Send from '@mui/icons-material/Send'\n\n// assuming props contains all the post attributes\nexport default function Post(props) {\n    const [error, setError] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\")\n    const [modalShow, setModalShow] = useState(false);\n    const styles = theme => ({\n        listItemText:{\n          fontSize: '1',\n        }\n      });\n\n    const like = async () => {\n        // send POST request to authors/{authorId}/inbox/ with a like\n        console.log('clicked like');\n        try {\n          const data = {\n            summary: `${props.currentUser.displayName} likes your post.`,\n            type: \"Like\",\n            author: props.currentUser.id,\n            _object: `${props.author.id}/posts/${props.post.id}`\n          }\n\n          const response = await requests.post(`service/authors/${props.author.id}/inbox/`,\n            data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }},\n            {withCredentials: true});\n          \n          // change summary of like, to send like to your own inbox\n          data.summary = `You liked ${props.author.displayName}'s post.`\n          sendToSelf(data);\n        } catch (e) {\n          console.log(e)\n          setError(\"Failed to send like.\");\n        }   \n    }\n\n    const comment = async () => {\n        // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n        console.log('clicked comment')\n        try {\n            const response = await requests.post(`service/authors/${props.author.id}/posts/${props.post.id}/comments/`,\n              {\n              post_id: props.post.id,\n              comment: commentText,\n              contentType: \"text/markdown\",\n              author: props.currentUser.id,\n              type: \"comment\"\n              },\n              {headers: {\n                  Authorization: localStorage.getItem('access_token'),\n                  accept: 'application/json',\n                }\n              },\n              {withCredentials: true});\n            sendToSelf(response.data);\n            // send to recipients inbox\n            const response_recipient = await requests.post(`service/authors/${props.author.id}/inbox/`,\n            response.data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }\n            },\n          {withCredentials: true})\n        } catch(e) {\n          setError(\"Failed to send comment.\");\n          console.log(e)\n        }   \n    }\n  \n    const sendToSelf = async (my_item) => {\n      const response_self = await requests.post(\n        `service/authors/${props.currentUser.id}/inbox/`,\n        my_item,\n        {headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json',\n        }},\n        {withCredentials:true});\n    };\n\n\n    return (\n      <ListItem>\n        <ListItemText\n          id=\"title\"\n          primaryTypographyProps={{fontSize: '30px'}}\n          primary={props.title}\n        />\n        <ListItemText\n          id=\"author\"\n          primary={\"By: \" + props.author.displayName}\n        />\n        {props.contentType == \"text/markdown\" && <ReactMarkdown>\n          {props.content}\n          </ReactMarkdown>}\n        {(props.contentType == \"text/plain\") && <ListItemText\n          primary={props.content}\n        />}\n        {(props.contentType == \"application/base64\" || props.contentType == \"image/png;base64\" || props.contentType == \"image/jpeg;base64\") && <ImageListItem\n          children={<img src={props.content}></img>}\n        />}\n        <ListItemText\n          id=\"description\"\n          primary={props.description}\n        />\n        <div id=\"comment-like-section\">\n            <Button \n            id=\"like-button\"\n            startIcon={<ThumbUp />}\n            onClick={like}>\n                Like\n            </Button>\n            <span id=\"comment-section\">\n                <TextField id=\"commentBox\" label=\"Comment\" variant=\"filled\" defaultValue=\"\" onChange={e => {setCommentText(e.target.value)}}/>\n                <Button\n                id=\"comment-button\" \n                startIcon={<Send />}\n                onClick={comment}>\n                    Comment\n                </Button>\n                <Button onClick={handleOpen}>Open modal</Button>\n                <Modal\n                  open={open}\n                  onClose={handleClose}\n                  aria-labelledby=\"modal-modal-title\"\n                  aria-describedby=\"modal-modal-description\"\n                >\n                  <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                      Text in a modal\n                    </Typography>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                      Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                    </Typography>\n                  </Box>\n                </Modal>\n            </span>\n        </div>\n      </ListItem>\n    );\n}"]},"metadata":{},"sourceType":"module"}