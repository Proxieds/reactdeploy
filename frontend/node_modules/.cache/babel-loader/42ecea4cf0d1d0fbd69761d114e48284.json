{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/SimpleDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { blue } from '@mui/material/colors';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './SimpleDialog.css';\nimport requests from '../../requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SimpleDialogDemo(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false); // const [selectedValue, setSelectedValue] = React.useState(authors[1]);\n\n  const [comments, setComments] = React.useState(0);\n  const [commenters, setCommenters] = React.useState(0);\n\n  const getComments = async () => {\n    try {\n      // alert(\"FIRST\");\n      const response = await requests.get(`service/authors/${props.author_id}/posts/${props.post_id}/comments/`, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n      console.log(response.data.items);\n      var ids = [];\n      var commenter_ids = [];\n      response.data.items.forEach(comment => {\n        ids.push(comment.comment);\n        commenter_ids.push(comment.author);\n      }); // comments = response.data.items;\n\n      setComments(ids);\n      setCommenters(commenter_ids);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    getComments();\n  }, []);\n\n  const handleClickOpen = async () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false); // setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"View Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog // selectedValue={selectedValue}\n    , {\n      open: open,\n      onClose: handleClose,\n      post_id: props.post_id,\n      comments: comments,\n      commenters: commenters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleDialogDemo, \"Sb5URFwi5NkUjn+dYp8Gz5pVFNY=\");\n\n_c = SimpleDialogDemo;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  var authors = props.commenters ? props.commenters : [];\n  var comments = props.comments ? props.comments : [];\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [commentText, setCommentText] = React.useState(\"\");\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    alert(\"Create New Comment Clicked\");\n  };\n\n  const handleEdit = value => {\n    alert(\"Edit Clicked\");\n  };\n\n  const handleDelete = async comment_id => {\n    alert(\"Delete Clicked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    maxWidth: \"800px\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: \"comment-dialog\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        pt: 0\n      },\n      children: [authors.map((author, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: blue[100],\n              color: blue[600]\n            },\n            children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `${author}: ${comments[index]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"edit-button\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 76\n          }, this),\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"comment-button\",\n          color: \"error\",\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 97\n          }, this),\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, author, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: () => handleListItemClick('addComment'),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"p4TF37JcSOEexXz8bq9p43U5U1Q=\");\n\n_c2 = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialogDemo\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/SimpleDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","DeleteIcon","EditIcon","requests","SimpleDialogDemo","props","open","setOpen","useState","comments","setComments","commenters","setCommenters","getComments","response","get","author_id","post_id","headers","Authorization","localStorage","getItem","accept","withCredentials","console","log","data","items","ids","commenter_ids","forEach","comment","push","author","error","useEffect","handleClickOpen","handleClose","value","SimpleDialog","authors","onClose","selectedValue","commentText","setCommentText","handleListItemClick","alert","handleEdit","handleDelete","comment_id","pt","map","index","bgcolor","color","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { blue } from '@mui/material/colors';\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit';\nimport './SimpleDialog.css';\nimport requests from '../../requests';\n\nexport default function SimpleDialogDemo(props) {\n  const [open, setOpen] = React.useState(false);\n  // const [selectedValue, setSelectedValue] = React.useState(authors[1]);\n  const [comments, setComments] = React.useState(0);\n  const [commenters, setCommenters] = React.useState(0);\n\n  const getComments = async () => {\n    try {\n      // alert(\"FIRST\");\n      const response = await requests.get(`service/authors/${props.author_id}/posts/${props.post_id}/comments/`,\n      {headers: {\n      Authorization: localStorage.getItem('access_token'),\n      accept: 'application/json',\n      }},\n      {withCredentials:true});\n      console.log(response.data.items);\n      var ids = [];\n      var commenter_ids = [];\n      response.data.items.forEach((comment) =>  {\n        ids.push(comment.comment);\n        commenter_ids.push(comment.author);\n      });\n      // comments = response.data.items;\n      setComments(ids);\n      setCommenters(commenter_ids);\n    }\n    catch(error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    getComments();\n  }, []);\n\n\nconst handleClickOpen = async () => {\n    setOpen(true);\n};\n\n  const handleClose = (value) => {\n    setOpen(false);\n    // setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        View Comments\n      </Button>\n      <SimpleDialog\n        // selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n        post_id = {props.post_id}\n        comments = {comments}\n        commenters = {commenters}\n      />\n    </div>\n  );\n}\n\nfunction SimpleDialog(props) {\n\n  var authors = props.commenters ? props.commenters : [];\n  var comments = props.comments ? props.comments : [];\n  const { onClose, selectedValue, open } = props;\n  const [commentText, setCommentText] = React.useState(\"\")\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    alert(\"Create New Comment Clicked\");\n  };\n\n  const handleEdit = (value) => {\n    alert(\"Edit Clicked\");\n  }\n\n  const handleDelete = async (comment_id) => {\n    alert(\"Delete Clicked\");\n  }\n\n  return (\n    <Dialog onClose={handleClose} maxWidth=\"800px\" open={open}>\n      <DialogTitle className=\"comment-dialog\">Comments</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {authors.map((author, index) => (\n          <ListItem button key={author}>\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={`${author}: ${comments[index]}`} />\n            <Button className = \"edit-button\" variant=\"contained\" endIcon={<EditIcon />} onClick={handleEdit}>\n              Edit \n            </Button>\n            <Button className = \"comment-button\" color = \"error\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={handleDelete}>\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addComment')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add Comment\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};"]},"metadata":{},"sourceType":"module"}