{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/AccountDetails/profileScreen.js\";\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport requests from \"../../requests\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport './profileScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: {},\n      showSuccess: false\n    };\n\n    this.getAuthorDetails = async () => {\n      // Get the author details\n      const response = await requests.get('get-user/', {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      });\n      this.setState({\n        author: {\n          id: response.data.id ? response.data.id : '',\n          url: response.data.url ? response.data.url : '',\n          host: response.data.host ? response.data.host : '',\n          displayName: response.data.displayName ? response.data.displayName : '',\n          github: response.data.github ? response.data.github : '',\n          profileImage: response.data.profileImage ? response.data.profileImage : ''\n        }\n      });\n    };\n\n    this.saveChangesPressed = async () => {\n      var updatesDict = {\n        \"id\": this.state.author.id\n      };\n\n      if (document.getElementById('url-input').value) {\n        updatesDict[\"url\"] = document.getElementById('url-input').value;\n      }\n\n      if (document.getElementById('host-input').value) {\n        updatesDict[\"host\"] = document.getElementById('host-input').value;\n      }\n\n      if (document.getElementById('displayName-input').value) {\n        updatesDict[\"displayName\"] = document.getElementById('displayName-input').value;\n      }\n\n      if (document.getElementById('github-input').value) {\n        updatesDict[\"github\"] = document.getElementById('github-input').value;\n      }\n\n      if (document.getElementById('profileImage-input').value) {\n        updatesDict[\"profileImage\"] = document.getElementById('profileImage-input').value;\n      }\n\n      const response = await requests.post('authors/' + this.state.author.id + '/', updatesDict, {\n        WithCredentials: true\n      }); // Keep values that were not updated\n\n      const allKeys = Object.keys(this.state.author);\n      const updatedKeys = Object.keys(updatesDict);\n\n      for (let i = 0; i < allKeys.length; i++) {\n        if (!updatedKeys.includes(allKeys[i])) {\n          updatesDict[allKeys[i]] = this.state.author[allKeys[i]];\n        }\n      } // Update state\n\n\n      this.setState({\n        author: updatesDict,\n        showSuccess: true\n      });\n      setTimeout(() => {\n        this.setState({\n          showSuccess: false\n        });\n      }, 2000);\n    };\n\n    this.getAuthorDetails();\n  }\n\n  createData(field, value) {\n    return {\n      field,\n      value\n    };\n  }\n\n  render() {\n    var rows = [this.createData('Url:', this.state.author.url), this.createData('Host:', this.state.author.host), this.createData('Display Name:', this.state.author.displayName), this.createData('GitHub:', this.state.author.github), this.createData('Profile Image:', this.state.author.profileImage)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"my-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Profile Image\",\n          src: this.state.author.profileImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"labels\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 200\n            },\n            \"aria-label\": \"simple table\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: row.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 29\n                }, this)]\n              }, row.field, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"url-input\",\n          label: \"New Url\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"host-input\",\n          label: \"New Host\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"displayName-input\",\n          label: \"New Display Name\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"github-input\",\n          label: \"New GitHub\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"profileImage-input\",\n          label: \"New ProfileImage\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.saveChangesPressed,\n        variant: \"contained\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), this.state.showSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Changes saved successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/AccountDetails/profileScreen.js"],"names":["React","TextField","Button","Alert","Typography","requests","Table","TableBody","TableCell","TableHead","TableRow","ProfileScreen","Component","constructor","props","state","author","showSuccess","getAuthorDetails","response","get","headers","Authorization","localStorage","getItem","accept","setState","id","data","url","host","displayName","github","profileImage","saveChangesPressed","updatesDict","document","getElementById","value","post","WithCredentials","allKeys","Object","keys","updatedKeys","i","length","includes","setTimeout","createData","field","render","rows","minWidth","map","row","border"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport Alert from '@mui/material/Alert'\nimport Typography from '@mui/material/Typography'\nimport requests from \"../../requests\";\nimport Table from \"@mui/material/Table\"\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport './profileScreen.css'\n\nclass ProfileScreen extends React.Component {\n    constructor(props){\n        super(props);\n        this.getAuthorDetails();\n    }\n    state = {author: {}, showSuccess: false};\n\n    getAuthorDetails = async () => {\n        // Get the author details\n        const response = await requests.get('get-user/', {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n          }});\n        this.setState({author: {\n            id: response.data.id ? response.data.id : '',\n            url: response.data.url ? response.data.url : '',\n            host: response.data.host ? response.data.host : '',\n            displayName: response.data.displayName ? response.data.displayName : '',\n            github: response.data.github ? response.data.github : '',\n            profileImage: response.data.profileImage ? response.data.profileImage : ''\n        }});\n    }\n\n    saveChangesPressed = async () => {\n        var updatesDict = {\"id\": this.state.author.id}\n        if (document.getElementById('url-input').value){\n            updatesDict[\"url\"] = document.getElementById('url-input').value;\n        }\n        if (document.getElementById('host-input').value){\n            updatesDict[\"host\"] = document.getElementById('host-input').value;\n        }\n        if (document.getElementById('displayName-input').value){\n            updatesDict[\"displayName\"] = document.getElementById('displayName-input').value;\n        }\n        if (document.getElementById('github-input').value){\n            updatesDict[\"github\"] = document.getElementById('github-input').value;\n        }\n        if (document.getElementById('profileImage-input').value){\n            updatesDict[\"profileImage\"] = document.getElementById('profileImage-input').value;\n        }\n        const response = await requests.post('authors/' + this.state.author.id + '/', updatesDict, {WithCredentials: true})\n\n        // Keep values that were not updated\n        const allKeys = Object.keys(this.state.author);\n        const updatedKeys = Object.keys(updatesDict);\n        for (let i = 0; i < allKeys.length; i++){\n            if (!updatedKeys.includes(allKeys[i])){\n                updatesDict[allKeys[i]] = this.state.author[allKeys[i]];\n            }\n        }\n            \n        // Update state\n        this.setState({author: updatesDict, showSuccess: true});\n        setTimeout(() => {\n            this.setState({showSuccess: false});\n        }, 2000);\n    }\n\n    createData(field, value) {\n        return { field, value };\n      }\n\n    render(){\n        var rows = [\n            this.createData('Url:', this.state.author.url),\n            this.createData('Host:', this.state.author.host),\n            this.createData('Display Name:', this.state.author.displayName),\n            this.createData('GitHub:', this.state.author.github),\n            this.createData('Profile Image:', this.state.author.profileImage),\n        ]\n        return (\n            <div className='ProfileScreen'>\n                <h1>My Profile</h1>\n                <span id='my-profile'>\n                    <img alt=\"Profile Image\" src={this.state.author.profileImage}></img>\n                    <div id='labels'>\n                    <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\n                        <TableBody>\n                        {rows.map((row) => (\n                            <TableRow\n                            key={row.field}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.field}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.value}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                    </div>\n                </span>\n                <h1>Edit Profile</h1>\n                <div id='inputs'>\n                    <TextField id=\"url-input\" label=\"New Url\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"host-input\" label=\"New Host\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"displayName-input\" label=\"New Display Name\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"github-input\" label=\"New GitHub\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"profileImage-input\" label=\"New ProfileImage\" variant=\"filled\" defaultValue=\"\"/>\n                </div>\n                <Button onClick={this.saveChangesPressed} variant=\"contained\">Save Changes</Button>\n                {this.state.showSuccess && <Alert severity=\"success\">\n                    Changes saved successfully\n                </Alert>}\n            </div>\n        )\n    }\n}\n\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}