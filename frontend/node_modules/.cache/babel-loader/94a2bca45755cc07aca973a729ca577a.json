{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/ViewComments.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { blue } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authors = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction ViewComments(props) {\n  _s();\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [commentText, setCommentText] = React.useState(\"\");\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    className: \"comment-dialog\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        pt: 0\n      },\n      children: [authors.map(author => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleListItemClick(author),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: blue[100],\n              color: blue[600]\n            },\n            children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, author, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: () => handleListItemClick('addAccount'),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Add account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewComments, \"p4TF37JcSOEexXz8bq9p43U5U1Q=\");\n\n_c = ViewComments;\nViewComments.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function ViewCommentButton() {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(authors[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [\"Selected: \", selectedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"View Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewCommentButton, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ViewCommentButton, \"UBajzfee81ju8gvTisyZ0Bti2AU=\");\n\n_c2 = ViewCommentButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewComments\");\n$RefreshReg$(_c2, \"ViewCommentButton\");","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/ViewComments.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","authors","ViewComments","props","onClose","selectedValue","open","commentText","setCommentText","useState","handleClose","handleListItemClick","value","pt","map","author","bgcolor","color","propTypes","func","isRequired","bool","string","ViewCommentButton","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { blue } from '@mui/material/colors';\n\n\n\nconst authors = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction ViewComments(props) {\n  const { onClose, selectedValue, open } = props;\n  const [commentText, setCommentText] = React.useState(\"\")\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}\n    className = 'comment-dialog'>\n      <DialogTitle>Comments</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {authors.map((author) => (\n          <ListItem button onClick={() => handleListItemClick(author)} key={author}>\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={author} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nViewComments.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function ViewCommentButton() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(authors[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        View Comments\n      </Button>\n      <ViewCommentButton\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}