{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport requests from \"../../requests\";\nimport './Post.css';\nimport { Alert, Avatar, Button, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, ImageListItem, TextField, Modal } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown';\nimport ThumbUp from '@mui/icons-material/ThumbUp';\nimport Send from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyVerticallyCenteredModal(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Centered Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n} // assuming props contains all the post attributes\n\n\n_c = MyVerticallyCenteredModal;\nexport default function Post(props) {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [commentText, setCommentText] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n\n  const styles = theme => ({\n    listItemText: {\n      fontSize: '1'\n    }\n  });\n\n  const like = async () => {\n    // send POST request to authors/{authorId}/inbox/ with a like\n    console.log('clicked like');\n\n    try {\n      const data = {\n        summary: `${props.currentUser.displayName} likes your post.`,\n        type: \"Like\",\n        author: props.currentUser.id,\n        _object: `${props.author.id}/posts/${props.post.id}`\n      };\n      const response = await requests.post(`service/authors/${props.author.id}/inbox/`, data, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      }); // change summary of like, to send like to your own inbox\n\n      data.summary = `You liked ${props.author.displayName}'s post.`;\n      sendToSelf(data);\n    } catch (e) {\n      console.log(e);\n      setError(\"Failed to send like.\");\n    }\n  };\n\n  const comment = async () => {\n    // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n    console.log('clicked comment');\n\n    try {\n      const response = await requests.post(`service/authors/${props.author.id}/posts/${props.post.id}/comments/`, {\n        post_id: props.post.id,\n        comment: commentText,\n        contentType: \"text/markdown\",\n        author: props.currentUser.id,\n        type: \"comment\"\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n      sendToSelf(response.data); // send to recipients inbox\n\n      const response_recipient = await requests.post(`service/authors/${props.author.id}/inbox/`, response.data, {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      }, {\n        withCredentials: true\n      });\n    } catch (e) {\n      setError(\"Failed to send comment.\");\n      console.log(e);\n    }\n  };\n\n  const sendToSelf = async my_item => {\n    const response_self = await requests.post(`service/authors/${props.currentUser.id}/inbox/`, my_item, {\n      headers: {\n        Authorization: localStorage.getItem('access_token'),\n        accept: 'application/json'\n      }\n    }, {\n      withCredentials: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n      id: \"title\",\n      primaryTypographyProps: {\n        fontSize: '30px'\n      },\n      primary: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      id: \"author\",\n      primary: \"By: \" + props.author.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), props.contentType == \"text/markdown\" && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 50\n    }, this), props.contentType == \"text/plain\" && /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 49\n    }, this), (props.contentType == \"application/base64\" || props.contentType == \"image/png;base64\" || props.contentType == \"image/jpeg;base64\") && /*#__PURE__*/_jsxDEV(ImageListItem, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 144\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      id: \"description\",\n      primary: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-like-section\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"like-button\",\n        startIcon: /*#__PURE__*/_jsxDEV(ThumbUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 24\n        }, this),\n        onClick: like,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"commentBox\",\n          label: \"Comment\",\n          variant: \"filled\",\n          defaultValue: \"\",\n          onChange: e => {\n            setCommentText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"comment-button\",\n          startIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 28\n          }, this),\n          onClick: comment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setModalShow(true),\n          children: \"Launch vertically centered modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), \"/>\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Post, \"TXIpIvSmxT9AFxyeVXo3oaXDZRo=\");\n\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyVerticallyCenteredModal\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js"],"names":["React","useState","requests","Alert","Avatar","Button","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","ImageListItem","TextField","Modal","ReactMarkdown","ThumbUp","Send","MyVerticallyCenteredModal","props","onHide","Post","error","setError","commentText","setCommentText","modalShow","setModalShow","styles","theme","listItemText","fontSize","like","console","log","data","summary","currentUser","displayName","type","author","id","_object","post","response","headers","Authorization","localStorage","getItem","accept","withCredentials","sendToSelf","e","comment","post_id","contentType","response_recipient","my_item","response_self","title","content","description","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport requests from \"../../requests\";\nimport './Post.css'\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        ImageListItem,\n        TextField,\n        Modal\n        } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown'\nimport ThumbUp from '@mui/icons-material/ThumbUp'\nimport Send from '@mui/icons-material/Send'\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Modal heading\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Centered Modal</h4>\n        <p>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\n// assuming props contains all the post attributes\nexport default function Post(props) {\n    const [error, setError] = useState(\"\");\n    const [commentText, setCommentText] = useState(\"\")\n    const [modalShow, setModalShow] = useState(false);\n    const styles = theme => ({\n        listItemText:{\n          fontSize: '1',\n        }\n      });\n\n    const like = async () => {\n        // send POST request to authors/{authorId}/inbox/ with a like\n        console.log('clicked like');\n        try {\n          const data = {\n            summary: `${props.currentUser.displayName} likes your post.`,\n            type: \"Like\",\n            author: props.currentUser.id,\n            _object: `${props.author.id}/posts/${props.post.id}`\n          }\n\n          const response = await requests.post(`service/authors/${props.author.id}/inbox/`,\n            data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }},\n            {withCredentials: true});\n          \n          // change summary of like, to send like to your own inbox\n          data.summary = `You liked ${props.author.displayName}'s post.`\n          sendToSelf(data);\n        } catch (e) {\n          console.log(e)\n          setError(\"Failed to send like.\");\n        }   \n    }\n\n    const comment = async () => {\n        // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n        console.log('clicked comment')\n        try {\n            const response = await requests.post(`service/authors/${props.author.id}/posts/${props.post.id}/comments/`,\n              {\n              post_id: props.post.id,\n              comment: commentText,\n              contentType: \"text/markdown\",\n              author: props.currentUser.id,\n              type: \"comment\"\n              },\n              {headers: {\n                  Authorization: localStorage.getItem('access_token'),\n                  accept: 'application/json',\n                }\n              },\n              {withCredentials: true});\n            sendToSelf(response.data);\n            // send to recipients inbox\n            const response_recipient = await requests.post(`service/authors/${props.author.id}/inbox/`,\n            response.data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }\n            },\n          {withCredentials: true})\n        } catch(e) {\n          setError(\"Failed to send comment.\");\n          console.log(e)\n        }   \n    }\n  \n    const sendToSelf = async (my_item) => {\n      const response_self = await requests.post(\n        `service/authors/${props.currentUser.id}/inbox/`,\n        my_item,\n        {headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json',\n        }},\n        {withCredentials:true});\n    };\n\n\n    return (\n      <ListItem>\n        <ListItemText\n          id=\"title\"\n          primaryTypographyProps={{fontSize: '30px'}}\n          primary={props.title}\n        />\n        <ListItemText\n          id=\"author\"\n          primary={\"By: \" + props.author.displayName}\n        />\n        {props.contentType == \"text/markdown\" && <ReactMarkdown>\n          {props.content}\n          </ReactMarkdown>}\n        {(props.contentType == \"text/plain\") && <ListItemText\n          primary={props.content}\n        />}\n        {(props.contentType == \"application/base64\" || props.contentType == \"image/png;base64\" || props.contentType == \"image/jpeg;base64\") && <ImageListItem\n          children={<img src={props.content}></img>}\n        />}\n        <ListItemText\n          id=\"description\"\n          primary={props.description}\n        />\n        <div id=\"comment-like-section\">\n            <Button \n            id=\"like-button\"\n            startIcon={<ThumbUp />}\n            onClick={like}>\n                Like\n            </Button>\n            <span id=\"comment-section\">\n                <TextField id=\"commentBox\" label=\"Comment\" variant=\"filled\" defaultValue=\"\" onChange={e => {setCommentText(e.target.value)}}/>\n                <Button\n                id=\"comment-button\" \n                startIcon={<Send />}\n                onClick={comment}>\n                    Comment\n                </Button>\n                <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n                  Launch vertically centered modal\n                </Button>\n                {/* <MyVerticallyCenteredModal\n                  show={modalShow}\n                  onHide={() => setModalShow(false)} */}\n                />\n            </span>\n        </div>\n      </ListItem>\n    );\n}"]},"metadata":{},"sourceType":"module"}