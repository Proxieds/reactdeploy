{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/NewPost.js\";\nimport React, { Component } from \"react\"; // import './App.css';\n\nimport { Button, TextField, MenuItem, FormControl, FormGroup, Grid } from \"@mui/material\";\nimport requests from \"../../requests\";\nimport { Redirect } from \"react-router-dom\";\nimport FileBase64 from \"react-file-base64\"; // TODO: Add form validation\n//import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n// TODOS:\n// Form validation\n// print error messages\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      content_type: \"text/plain\",\n      content: \"\",\n      categories: \"\",\n      visibility: \"PUBLIC\",\n      successful_post: false,\n      author_id: \"\",\n      jwt: localStorage.getItem(\"access_token\")\n    };\n\n    this.getAuthorId = async () => {\n      const response = await requests.get(\"service/get-user/\", {\n        headers: {\n          Authorization: this.state.jwt,\n          accept: \"application/json\"\n        }\n      });\n      this.setState({\n        author_id: response.data.id ? response.data.id : \"\"\n      });\n    };\n\n    this.handleSubmit = async () => {\n      console.log(this.state);\n      requests.defaults.headers[\"Authorization\"] = this.state.jwt;\n\n      try {\n        const url = \"service/authors/\" + this.state.author_id + \"/posts/\";\n        const response = await requests.post(url, {\n          headers: {\n            accept: \"application/json\"\n          },\n          title: this.state.title,\n          author: this.state.author_id,\n          contentType: this.state.content_type,\n          content: this.state.content,\n          description: this.state.description,\n          visibility: this.state.visibility,\n          categories: this.state.categories\n        });\n        console.log(response.data);\n        this.setState({\n          successful_post: true\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getAuthorId();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        variant: \"filled\",\n        disabled: true,\n        justifyContent: \"center\",\n        style: {\n          width: '35em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            fullWidth: true,\n            label: \"Title\",\n            value: this.state.title,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return this.setState({\n                title: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            fullWidth: true,\n            label: \"Description\",\n            value: this.state.description,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return this.setState({\n                description: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            value: this.state.content_type,\n            label: \"Content Type\",\n            fullWidth: true,\n            onChange: _ref3 => {\n              let {\n                target\n              } = _ref3;\n              return this.setState({\n                content_type: target.value\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"text/plain\",\n              children: \"text/plain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"text/markdown\",\n              children: \"text/markdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"application/base64\",\n              children: \"application/base64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"image/png;base64\",\n              children: \"image/png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"image/jpeg;base64\",\n              children: \"image/jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), this.state.content_type === \"image/jpeg;base64\" || this.state.content_type === \"image/png;base64\" ? /*#__PURE__*/_jsxDEV(FileBase64, {\n            className: \"image-input\",\n            type: \"file\",\n            accept: \".png,.jpeg,.jpg\",\n            label: \"Content\",\n            value: this.state.content,\n            onDone: _ref4 => {\n              let {\n                base64\n              } = _ref4;\n              this.setState({\n                // base64 includes data:image/png;base64, before content. So split.\n                content: base64.split(\",\")[1]\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"medium\",\n            multiline: true,\n            type: \"text\",\n            fullWidth: true,\n            label: \"Content\",\n            value: this.state.content,\n            onChange: _ref5 => {\n              let {\n                target\n              } = _ref5;\n              return this.setState({\n                content: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            type: \"text\",\n            label: \"Categories\",\n            fullWidth: true,\n            value: this.state.categories,\n            onChange: _ref6 => {\n              let {\n                target\n              } = _ref6;\n              return this.setState({\n                categories: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            fullWidth: true,\n            value: this.state.visibility,\n            label: \"Visibility\",\n            defaultValue: \"PUBLIC\",\n            onChange: _ref7 => {\n              let {\n                target\n              } = _ref7;\n              return this.setState({\n                visibility: target.value\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"PUBLIC\",\n              children: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"FRIENDS\",\n              children: \"Friends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: this.handleSubmit,\n            ref: node => this.btn = node,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), this.state.successful_post && /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/NewPost.js"],"names":["React","Component","Button","TextField","MenuItem","FormControl","FormGroup","Grid","requests","Redirect","FileBase64","NewPost","constructor","props","state","title","description","content_type","content","categories","visibility","successful_post","author_id","jwt","localStorage","getItem","getAuthorId","response","get","headers","Authorization","accept","setState","data","id","handleSubmit","console","log","defaults","url","post","author","contentType","error","render","width","target","value","base64","split","node","btn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import './App.css';\nimport {\n  Button,\n  TextField,\n  MenuItem,\n  FormControl,\n  FormGroup,\n  Grid,\n} from \"@mui/material\";\nimport requests from \"../../requests\";\nimport { Redirect } from \"react-router-dom\";\nimport FileBase64 from \"react-file-base64\";\n// TODO: Add form validation\n//import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\n// TODOS:\n// Form validation\n// print error messages\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.getAuthorId();\n  }\n\n  state = {\n    title: \"\",\n    description: \"\",\n    content_type: \"text/plain\",\n    content: \"\",\n    categories: \"\",\n    visibility: \"PUBLIC\",\n    successful_post: false,\n    author_id: \"\",\n    jwt: localStorage.getItem(\"access_token\"),\n  };\n\n  getAuthorId = async () => {\n    const response = await requests.get(\"service/get-user/\", {\n      headers: {\n        Authorization: this.state.jwt,\n        accept: \"application/json\",\n      },\n    });\n    this.setState({\n      author_id: response.data.id ? response.data.id : \"\",\n    });\n  };\n\n  handleSubmit = async () => {\n    console.log(this.state);\n    requests.defaults.headers[\"Authorization\"] = this.state.jwt;\n    try {\n      const url = \"service/authors/\" + this.state.author_id + \"/posts/\";\n      const response = await requests.post(url, {\n        headers: {\n          accept: \"application/json\",\n        },\n        title: this.state.title,\n        author: this.state.author_id,\n        contentType: this.state.content_type,\n        content: this.state.content,\n        description: this.state.description,\n        visibility: this.state.visibility,\n        categories: this.state.categories,\n      });\n      console.log(response.data);\n      this.setState({ successful_post: true });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <Grid\n        container\n        justifyContent=\"center\"\n        \n      >\n        <FormControl\n          component=\"fieldset\"\n          variant=\"filled\"\n          disabled\n          justifyContent=\"center\"\n          style ={{width: '35em'}}\n        >\n          <h1>New Post</h1>\n          <FormGroup>\n            <TextField\n              className=\"text-input\"\n              size=\"small\"\n              type=\"text\"\n              fullWidth={true}\n              label=\"Title\"\n              value={this.state.title}\n              onChange={({ target }) =>\n                this.setState({\n                  title: target.value,\n                })\n              }\n            />\n            <br />\n            <TextField\n              className=\"text-input\"\n              size=\"small\"\n              type=\"text\"\n              fullWidth={true}\n              label=\"Description\"\n              value={this.state.description}\n              onChange={({ target }) =>\n                this.setState({\n                  description: target.value,\n                })\n              }\n            />\n            <br />\n            <TextField\n              select\n              value={this.state.content_type}\n              label=\"Content Type\"\n              fullWidth={true}\n              onChange={({ target }) =>\n                this.setState({\n                  content_type: target.value,\n                })\n              }\n            >\n              <MenuItem value=\"text/plain\">text/plain</MenuItem>\n              <MenuItem value=\"text/markdown\">text/markdown</MenuItem>\n              <MenuItem value=\"application/base64\">application/base64</MenuItem>\n              <MenuItem value=\"image/png;base64\">image/png</MenuItem>\n              <MenuItem value=\"image/jpeg;base64\">image/jpeg</MenuItem>\n            </TextField>\n            <br />\n            {this.state.content_type === \"image/jpeg;base64\" ||\n            this.state.content_type === \"image/png;base64\" ? (\n              <FileBase64\n                className=\"image-input\"\n                type=\"file\"\n                accept=\".png,.jpeg,.jpg\"\n                label=\"Content\"\n                value={this.state.content}\n                onDone={({ base64 }) => {\n                  this.setState({\n                    // base64 includes data:image/png;base64, before content. So split.\n                    content: base64.split(\",\")[1],\n                  });\n                }}\n              />\n            ) : (\n              <TextField\n                className=\"text-input\"\n                size=\"medium\"\n                multiline={true}\n                type=\"text\"\n                fullWidth={true}\n                label=\"Content\"\n                value={this.state.content}\n                onChange={({ target }) =>\n                  this.setState({\n                    content: target.value,\n                  })\n                }\n              />\n            )}\n            <br />\n            <TextField\n              className=\"text-input\"\n              type=\"text\"\n              label=\"Categories\"\n              fullWidth={true}\n              value={this.state.categories}\n              onChange={({ target }) =>\n                this.setState({\n                  categories: target.value,\n                })\n              }\n            />\n            <br />\n            <p>Visibility</p>\n            <TextField\n              select\n              fullWidth={true}\n              value={this.state.visibility}\n              label=\"Visibility\"\n              defaultValue=\"PUBLIC\"\n              onChange={({ target }) =>\n                this.setState({\n                  visibility: target.value,\n                })\n              }\n            >\n              <MenuItem value=\"PUBLIC\">Public</MenuItem>\n              <MenuItem value=\"FRIENDS\">Friends</MenuItem>\n            </TextField>\n            <br />\n            <Button\n              variant=\"contained\"\n              onClick={this.handleSubmit}\n              ref={(node) => (this.btn = node)}\n            >\n              Post\n            </Button>\n            {this.state.successful_post && <Redirect to=\"/inbox\" />}\n          </FormGroup>\n        </FormControl>\n      </Grid>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}