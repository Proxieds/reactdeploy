{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/AccountDetails/profileScreen.js\";\nimport React, { useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport requests from \"../../requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: {}\n    };\n\n    this.getAuthorDetails = async () => {\n      // Get the author details\n      const response = await requests.get('service/get-user/', {\n        headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json'\n        }\n      });\n      this.setState({\n        author: {\n          id: response.data.id ? response.data.id : '',\n          url: response.data.url ? response.data.url : '',\n          host: response.data.host ? response.data.host : '',\n          displayName: response.data.displayName ? response.data.displayName : '',\n          github: response.data.github ? response.data.github : '',\n          profileImage: response.data.profileImage ? response.data.profileImage : ''\n        }\n      });\n      console.log(this.state.author);\n    };\n\n    this.saveChangesPressed = async () => {\n      var updatesDict = {\n        \"id\": this.state.author.id\n      };\n\n      if (document.getElementById('url-input').value) {\n        updatesDict[\"url\"] = document.getElementById('url-input').value;\n      }\n\n      if (document.getElementById('host-input').value) {\n        updatesDict[\"host\"] = document.getElementById('host-input').value;\n      }\n\n      if (document.getElementById('displayName-input').value) {\n        updatesDict[\"displayName\"] = document.getElementById('displayName-input').value;\n      }\n\n      if (document.getElementById('github-input').value) {\n        updatesDict[\"github\"] = document.getElementById('github-input').value;\n      }\n\n      if (document.getElementById('profileImage-input').value) {\n        updatesDict[\"profileImage\"] = document.getElementById('profileImage-input').value;\n      }\n\n      await requests.post('service/authors/' + this.state.author.id + '/', updatesDict, {\n        WithCredentials: true\n      });\n      this.setState({\n        author: {}\n      });\n    };\n\n    this.getAuthorDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Profile Image\",\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-url-label\",\n            children: \"Current Url: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-url\",\n            children: this.state.author.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-host-label\",\n            children: \"Current Host: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-host\",\n            children: this.state.author.host\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-displayName-label\",\n            children: \"Current Display Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-displayName\",\n            children: this.state.author.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-github-label\",\n            children: \"Current GitHub: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-github\",\n            children: this.state.author.github\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-profileImage-label\",\n            children: \"Current Profile Image: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"current-profileImage\",\n            children: this.state.author.profileImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"url-input\",\n          label: \"New Url\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"host-input\",\n          label: \"New Host\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"displayName-input\",\n          label: \"New Display Name\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"github-input\",\n          label: \"New GitHub\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"profileImage-input\",\n          label: \"New ProfileImage\",\n          variant: \"filled\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.saveChangesPressed,\n        variant: \"contained\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/AccountDetails/profileScreen.js"],"names":["React","useEffect","ReactDom","TextField","Button","requests","ProfileScreen","Component","constructor","props","state","author","getAuthorDetails","response","get","headers","Authorization","localStorage","getItem","accept","setState","id","data","url","host","displayName","github","profileImage","console","log","saveChangesPressed","updatesDict","document","getElementById","value","post","WithCredentials","render"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport ReactDom from 'react-dom'\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport requests from \"../../requests\";\n\nclass ProfileScreen extends React.Component {\n    constructor(props){\n        super(props);\n        this.getAuthorDetails();\n    }\n    state = {author: {}}\n\n    getAuthorDetails = async () => {\n        // Get the author details\n        const response = await requests.get('service/get-user/', {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n          }});\n        this.setState({author: {\n            id: response.data.id ? response.data.id : '',\n            url: response.data.url ? response.data.url : '',\n            host: response.data.host ? response.data.host : '',\n            displayName: response.data.displayName ? response.data.displayName : '',\n            github: response.data.github ? response.data.github : '',\n            profileImage: response.data.profileImage ? response.data.profileImage : ''\n        }});\n        console.log(this.state.author)\n    }\n\n    saveChangesPressed = async () => {\n        var updatesDict = {\"id\": this.state.author.id}\n        if (document.getElementById('url-input').value){\n            updatesDict[\"url\"] = document.getElementById('url-input').value;\n        }\n        if (document.getElementById('host-input').value){\n            updatesDict[\"host\"] = document.getElementById('host-input').value;\n        }\n        if (document.getElementById('displayName-input').value){\n            updatesDict[\"displayName\"] = document.getElementById('displayName-input').value;\n        }\n        if (document.getElementById('github-input').value){\n            updatesDict[\"github\"] = document.getElementById('github-input').value;\n        }\n        if (document.getElementById('profileImage-input').value){\n            updatesDict[\"profileImage\"] = document.getElementById('profileImage-input').value;\n        }\n        await requests.post('service/authors/' + this.state.author.id + '/', updatesDict, {WithCredentials: true});\n        this.setState({author: {}});\n    }\n\n    render(){\n        return (\n            <div className='ProfileScreen'>\n                <img alt=\"Profile Image\" src=\"\"></img>\n                <div>\n                    <span>\n                        <label id=\"current-url-label\">Current Url: </label>\n                        <label id=\"current-url\">{this.state.author.url}</label>\n                    </span>\n                    <span>\n                        <label id=\"current-host-label\">Current Host: </label>\n                        <label id=\"current-host\">{this.state.author.host}</label>\n                    </span>\n                    <span>\n                        <label id=\"current-displayName-label\">Current Display Name: </label>\n                        <label id=\"current-displayName\">{this.state.author.displayName}</label>\n                    </span>\n                    <span>\n                        <label id=\"current-github-label\">Current GitHub: </label>\n                        <label id=\"current-github\">{this.state.author.github}</label>\n                    </span>\n                    <span>\n                        <label id=\"current-profileImage-label\">Current Profile Image: </label>\n                        <label id=\"current-profileImage\">{this.state.author.profileImage}</label>\n                    </span>\n                </div>\n                <div>\n                    <TextField id=\"url-input\" label=\"New Url\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"host-input\" label=\"New Host\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"displayName-input\" label=\"New Display Name\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"github-input\" label=\"New GitHub\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"profileImage-input\" label=\"New ProfileImage\" variant=\"filled\" defaultValue=\"\"/>\n                </div>\n                <Button onClick={this.saveChangesPressed} variant=\"contained\">Save Changes</Button>\n            </div>\n        )\n    }\n}\n\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}