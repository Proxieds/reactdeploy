{"ast":null,"code":"var _jsxFileName = \"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/login.js\";\nimport React, { useEffect, Component } from \"react\"; // import './App.css';\n\nimport { Button, TextField } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport ProfileScreen from \"../AccountDetails/profileScreen\";\nimport { useHstory, Redirect, NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      successful_login: false,\n      error_login: false,\n      error_messages: \"\"\n    };\n\n    this.handleLogin = async () => {\n      console.log(this.state);\n\n      try {\n        const response = await requests.post(`service/login/`, {\n          username: this.state.username,\n          password: this.state.password\n        }, {\n          WithCredentials: true\n        });\n        localStorage.setItem('access_token', response.data);\n        requests.defaults.headers['Authorization'] = localStorage.getItem('access_token');\n        console.log('response is');\n        console.log(response.data);\n        this.setState({\n          successful_login: true\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.verifyLogin = e => {\n      console.log(this.successful_login);\n\n      if (!this.successful_login) {\n        e.preventDefault();\n      }\n    };\n  }\n\n  validateLogin() {\n    if (!this.state.username) {\n      this.setState({\n        registration_error: true\n      });\n      this.setState({\n        registration_success: false\n      });\n      this.setState({\n        error_messages: \"Username is empty\"\n      });\n      return false;\n    }\n\n    if (!this.state.password) {\n      this.setState({\n        registration_error: true\n      });\n      this.setState({\n        registration_success: false\n      });\n      this.setState({\n        error_messages: \"Password is Empty\"\n      });\n      return false;\n    }\n\n    if (!(this.state.password == this.state.confirm_password)) {\n      this.setState({\n        registration_error: true\n      });\n      this.setState({\n        registration_success: false\n      });\n      this.setState({\n        error_messages: \"Passwords do not Match\"\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Social Distributions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please Log in to Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            label: \"Username\",\n            value: this.state.username,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return this.setState({\n                username: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-input\",\n            size: \"small\",\n            type: \"text\",\n            label: \"Password\",\n            type: \"password\",\n            value: this.state.password,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return this.setState({\n                password: target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: this.state.loginBtnDisabled,\n            variant: \"contained\",\n            onClick: this.handleLogin,\n            ref: node => this.btn = node,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), this.state.successful_login && /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          style: {\n            textDecoration: 'none',\n            position: 'relative',\n            top: '20px'\n          },\n          to: \"/register\",\n          children: \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/login.js"],"names":["React","useEffect","Component","Button","TextField","requests","ProfileScreen","useHstory","Redirect","NavLink","Login","state","username","password","successful_login","error_login","error_messages","handleLogin","console","log","response","post","WithCredentials","localStorage","setItem","data","defaults","headers","getItem","setState","error","verifyLogin","e","preventDefault","validateLogin","registration_error","registration_success","confirm_password","render","target","value","loginBtnDisabled","node","btn","textDecoration","position","top"],"mappings":"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","sourcesContent":["import React, { useEffect, Component } from \"react\";\n// import './App.css';\nimport {\n    Button,\n    TextField,\n  } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport ProfileScreen from \"../AccountDetails/profileScreen\";\nimport {useHstory, Redirect, NavLink } from \"react-router-dom\";\n  \nclass Login extends Component {\n    state = {\n          username: \"\",\n          password: \"\",\n          successful_login: false,\n          error_login: false,\n          error_messages: \"\"\n      }\n\n      validateLogin() {\n        if (!this.state.username) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Username is empty\"})\n            return false\n        }\n        if (!this.state.password) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Password is Empty\"})\n            return false\n        }\n        if (!(this.state.password == this.state.confirm_password)) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Passwords do not Match\"})\n            return false\n        }\n        return true;\n    }\n    handleLogin = async () => {\n        console.log(this.state);\n        try {\n            const response = await requests.post(`service/login/`, {\n                username: this.state.username,\n                password: this.state.password\n            }, {WithCredentials: true});\n            localStorage.setItem('access_token', response.data);\n            requests.defaults.headers['Authorization'] = localStorage.getItem('access_token');\n            console.log('response is')\n            console.log(response.data);\n            this.setState({successful_login: true})\n        }\n        catch(error) {\n            console.log(error);\n        }\n    }\n\n    verifyLogin = (e) => {\n        console.log(this.successful_login)\n        if (!this.successful_login) {\n            e.preventDefault();\n        }\n    }\n\n  render() {\n      return (\n          <body className=\"background\">\n          <div className=\"login-form\">\n            <h1>\n                Social Distributions\n            </h1>\n            <h3>\n                Please Log in to Continue\n            </h3>\n            <div className=\"login-wrapper\">\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Username\"\n                value={this.state.username}\n                onChange={({ target }) =>\n                this.setState({\n                username: target.value\n                })\n            }\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Password\"\n                type=\"password\"\n                value={this.state.password}\n                onChange={({ target }) =>\n                    this.setState({\n                    password: target.value\n                    })\n                }\n            />\n            <br/>\n            <Button\n                disabled={this.state.loginBtnDisabled}\n                variant=\"contained\"\n                onClick={this.handleLogin}\n                ref={node => (this.btn = node)}>\n              Login\n            </Button>\n            {this.state.successful_login && <Redirect to=\"/inbox\" />}\n            </div>\n            <NavLink style={{ textDecoration: 'none', position: 'relative', top: '20px' }} to=\"/register\">Don't have an account? Sign Up</NavLink>\n          </div>\n          </body>\n        );\n    }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}