[{"/Users/victorlieu/Desktop/Development/404Project/frontend/src/index.js":"1","/Users/victorlieu/Desktop/Development/404Project/frontend/src/reportWebVitals.js":"2","/Users/victorlieu/Desktop/Development/404Project/frontend/src/App.js":"3","/Users/victorlieu/Desktop/Development/404Project/frontend/src/requests.js":"4","/Users/victorlieu/Desktop/Development/404Project/frontend/src/constants.js":"5","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/login.js":"6","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/Register.js":"7","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/Login.js":"8","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Inbox.js":"9","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/AccountDetails/profileScreen.js":"10","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/NavBar.js":"11","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/NewPost.js":"12","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/FriendsPage.js":"13","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/Follower.js":"14","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/Following.js":"15","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/FollowRequest.js":"16","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js":"17","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/CommentNotification.js":"18","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/LikeNotification.js":"19","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/PublicPosts.js":"20","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/AddComment.js":"21","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/CommentDialog.js":"22","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/index.js":"23","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/App.js":"24","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/reportWebVitals.js":"25","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/NavBar.js":"26","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/NewPost.js":"27","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/PublicPosts.js":"28","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/Inbox.js":"29","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/LoginRegister/Register.js":"30","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/LoginRegister/login.js":"31","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/FriendsPage.js":"32","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/AccountDetails/profileScreen.js":"33","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/requests.js":"34","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/Post.js":"35","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/CommentNotification.js":"36","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/LikeNotification.js":"37","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/FollowRequest.js":"38","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/Following.js":"39","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/Follower.js":"40","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/constants.js":"41","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/CommentDialog.js":"42","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/AddComment.js":"43"},{"size":455,"mtime":1646358682860,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1646166560117,"results":"46","hashOfConfig":"45"},{"size":1760,"mtime":1646947814284,"results":"47","hashOfConfig":"45"},{"size":370,"mtime":1646269807844,"results":"48","hashOfConfig":"45"},{"size":75,"mtime":1646203476772,"results":"49","hashOfConfig":"45"},{"size":3551,"mtime":1647552772343,"results":"50","hashOfConfig":"45"},{"size":4463,"mtime":1647552772343,"results":"51","hashOfConfig":"45"},{"size":2845,"mtime":1646190084325,"results":"52","hashOfConfig":"45"},{"size":5177,"mtime":1647552772342,"results":"53","hashOfConfig":"45"},{"size":5411,"mtime":1647552772341,"results":"54","hashOfConfig":"45"},{"size":6891,"mtime":1647552772343,"results":"55","hashOfConfig":"45"},{"size":7920,"mtime":1647552772344,"results":"56","hashOfConfig":"45"},{"size":5230,"mtime":1647552772342,"results":"57","hashOfConfig":"45"},{"size":1679,"mtime":1647552772342,"results":"58","hashOfConfig":"45"},{"size":1634,"mtime":1647552772342,"results":"59","hashOfConfig":"45"},{"size":2894,"mtime":1647552772342,"results":"60","hashOfConfig":"45"},{"size":6374,"mtime":1647552772343,"results":"61","hashOfConfig":"45"},{"size":655,"mtime":1646859932571,"results":"62","hashOfConfig":"45"},{"size":586,"mtime":1646433620483,"results":"63","hashOfConfig":"45"},{"size":3348,"mtime":1647552772344,"results":"64","hashOfConfig":"45"},{"size":5454,"mtime":1647552772344,"results":"65","hashOfConfig":"45"},{"size":4709,"mtime":1647552772344,"results":"66","hashOfConfig":"45"},{"size":455,"mtime":1646358682860,"results":"67","hashOfConfig":"68"},{"size":1837,"mtime":1647675334532,"results":"69","hashOfConfig":"68"},{"size":362,"mtime":1646166560117,"results":"70","hashOfConfig":"68"},{"size":6891,"mtime":1647552772343,"results":"71","hashOfConfig":"68"},{"size":7920,"mtime":1647552772344,"results":"72","hashOfConfig":"68"},{"size":3348,"mtime":1647552772344,"results":"73","hashOfConfig":"68"},{"size":5177,"mtime":1647552772342,"results":"74","hashOfConfig":"68"},{"size":4463,"mtime":1647552772343,"results":"75","hashOfConfig":"68"},{"size":3551,"mtime":1647552772343,"results":"76","hashOfConfig":"68"},{"size":5230,"mtime":1647552772342,"results":"77","hashOfConfig":"68"},{"size":5411,"mtime":1647552772341,"results":"78","hashOfConfig":"68"},{"size":370,"mtime":1646269807844,"results":"79","hashOfConfig":"68"},{"size":6374,"mtime":1647552772343,"results":"80","hashOfConfig":"68"},{"size":655,"mtime":1646859932571,"results":"81","hashOfConfig":"68"},{"size":586,"mtime":1646433620483,"results":"82","hashOfConfig":"68"},{"size":2894,"mtime":1647552772342,"results":"83","hashOfConfig":"68"},{"size":1634,"mtime":1647552772342,"results":"84","hashOfConfig":"68"},{"size":1679,"mtime":1647552772342,"results":"85","hashOfConfig":"68"},{"size":75,"mtime":1646203476772,"results":"86","hashOfConfig":"68"},{"size":4709,"mtime":1647552772344,"results":"87","hashOfConfig":"68"},{"size":5454,"mtime":1647552772344,"results":"88","hashOfConfig":"68"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1kmnpy",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fayv2",{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},"/Users/victorlieu/Desktop/Development/404Project/frontend/src/index.js",[],[],["239","240"],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/reportWebVitals.js",[],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/App.js",["241","242","243","244"],[],"import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport NavBar from \"./components/NavBar.js\";\n\n\nimport Login from \"./components/LoginRegister/login\";\nimport Register from \"./components/LoginRegister/Register\";\nimport Inbox from \"./components/Inbox/Inbox\";\nimport PublicPosts from \"./components/Posts/PublicPosts\";\nimport FriendsPage from \"./components/Followers/FriendsPage\";\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProfileScreen from \"./components/AccountDetails/profileScreen\";\nimport NewPost from \"./components/Posts/NewPost.js\"\n\nfunction App() {\n\n    return (\n      <BrowserRouter>\n        <Route exact path=\"/\">\n          <div className=\"Login\">\n            <Login />\n          </div>\n        </Route>\n        <Route exact path=\"/register\">\n          <div className=\"Register\">\n            <Register/>\n          </div>\n        </Route>\n        <Route exact path=\"/inbox\">\n          <div className=\"Inbox\">\n            <NavBar />\n            <Inbox/>\n          </div>\n        </Route>\n        <Route exact path=\"/profile\">\n          <div className=\"Profile\">\n            <NavBar />\n            <ProfileScreen/>\n          </div>\n        </Route>\n        <Route exact path=\"/friends\">\n          <div className=\"App\">\n            <NavBar />\n            <FriendsPage/>\n          </div>     \n        </Route>   \n        <Route exact path=\"/post\">\n          <div className=\"NewPost\">\n            <NavBar />\n            <NewPost/>\n          </div>\n        </Route>\n        <Route exact path=\"/public_posts\">\n          <div className=\"PublicPosts\">\n            <NavBar />\n            <PublicPosts/>\n          </div>\n        </Route>\n      </BrowserRouter>\n    )\n}\n\nexport default App;\n",["245","246"],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/requests.js",[],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/constants.js",[],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/login.js",["247","248","249","250"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/Register.js",["251","252","253","254","255","256"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/LoginRegister/Login.js",["257","258","259"],[],"import React, { useEffect, Component } from \"react\";\n// import './App.css';\nimport {\n    Button,\n    TextField,\n  } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport {useHistory, Redirect, NavLink } from \"react-router-dom\";\n  \nclass Login extends Component {\n    state = {\n          username: \"\",\n          password: \"\",\n          successful_login: false\n      }\n    handleLogin = async () => {\n        console.log(this.state);\n        try {\n            const response = await requests.post(`service/login/`, {\n                username: this.state.username,\n                password: this.state.password\n            }, {WithCredentials: true});\n            localStorage.setItem('access_token', response.data);\n            requests.defaults.headers['Authorization'] = 'JWT ' + localStorage.getItem('access_token');\n            console.log(response.data);\n            this.setState({successful_login: true})\n        }\n        catch(error) {\n            console.log(error);\n        }\n    }\n\n    verifyLogin = (e) => {\n        console.log(this.successful_login)\n        if (!this.successful_login) {\n            e.preventDefault();\n        }\n    }\n\n  render() {\n      return (\n          <body class=\"background\">\n          <div className=\"form\">\n            <h1>\n                Social Distributions\n            </h1>\n            <h3>\n                Please Log in to Continue\n            </h3>\n            <div className=\"wrapper\">\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Username\"\n                value={this.state.username}\n                onChange={({ target }) =>\n                this.setState({\n                username: target.value\n                })\n            }\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Password\"\n                type=\"password\"\n                value={this.state.password}\n                onChange={({ target }) =>\n                    this.setState({\n                    password: target.value\n                    })\n                }\n            />\n            <br/>\n            <Button\n                disabled={this.state.loginBtnDisabled}\n                variant=\"contained\"\n                onClick={this.handleLogin}\n                ref={node => (this.btn = node)}>\n              Login\n            </Button>\n            {this.state.successful_login && <Redirect to=\"/inbox\" />}\n            </div>\n            <NavLink style={{ textDecoration: 'none', position: 'relative', top: '20px' }} to=\"/register\">Don't have an account? Sign Up</NavLink>\n          </div>\n          </body>\n        );\n    }\n}\n\nexport default Login;\n",["260","261"],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Inbox.js",["262","263","264","265","266","267","268"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/AccountDetails/profileScreen.js",["269","270","271","272"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/NavBar.js",["273","274"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/NewPost.js",[],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/FriendsPage.js",["275"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/Follower.js",["276"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/Following.js",["277"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Followers/FollowRequest.js",["278","279","280","281"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/Post.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/CommentNotification.js",["301","302"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Inbox/LikeNotification.js",["303","304","305"],[],"import React, {useState} from \"react\";\n\nimport { Alert,\n        Avatar,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\n// like notification that appears in the inbox\nexport default function LikeNotification(props) {\n\n    return (\n      <ListItem button component=\"a\" href={props.object}>\n        <ListItemAvatar>\n          <Avatar\n          src={props.profileImage}\n          />\n        </ListItemAvatar>\n        <ListItemText primary={props.summary}/>\n      </ListItem>\n    );\n}","/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/PublicPosts.js",["306"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/AddComment.js",["307","308","309"],[],"/Users/victorlieu/Desktop/Development/404Project/frontend/src/components/Posts/CommentDialog.js",["310","311","312","313","314"],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/index.js",[],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/App.js",["315","316","317","318"],[],"import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport NavBar from \"./components/NavBar.js\";\n\n\nimport Login from \"./components/LoginRegister/login\";\nimport Register from \"./components/LoginRegister/Register\";\nimport Inbox from \"./components/Inbox/Inbox\";\nimport PublicPosts from \"./components/Posts/PublicPosts\";\nimport FriendsPage from \"./components/Followers/FriendsPage\";\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProfileScreen from \"./components/AccountDetails/profileScreen\";\nimport NewPost from \"./components/Posts/NewPost.js\"\n\nconst port = process.env.PORT || 3000;\nconsole.log(`Live on Port ${port}`);\n\nfunction App() {\n\n    return (\n      <BrowserRouter>\n        <Route exact path=\"/\">\n          <div className=\"Login\">\n            <Login />\n          </div>\n        </Route>\n        <Route exact path=\"/register\">\n          <div className=\"Register\">\n            <Register/>\n          </div>\n        </Route>\n        <Route exact path=\"/inbox\">\n          <div className=\"Inbox\">\n            <NavBar />\n            <Inbox/>\n          </div>\n        </Route>\n        <Route exact path=\"/profile\">\n          <div className=\"Profile\">\n            <NavBar />\n            <ProfileScreen/>\n          </div>\n        </Route>\n        <Route exact path=\"/friends\">\n          <div className=\"App\">\n            <NavBar />\n            <FriendsPage/>\n          </div>     \n        </Route>   \n        <Route exact path=\"/post\">\n          <div className=\"NewPost\">\n            <NavBar />\n            <NewPost/>\n          </div>\n        </Route>\n        <Route exact path=\"/public_posts\">\n          <div className=\"PublicPosts\">\n            <NavBar />\n            <PublicPosts/>\n          </div>\n        </Route>\n      </BrowserRouter>\n    )\n}\n\nexport default App;\n","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/reportWebVitals.js",[],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/NavBar.js",["319","320"],[],"/*Code taken from: https://mui.com/components/app-bar/#ResponsiveAppBar.js and modified*/\n\n\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport {Link, useHistory} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\nimport \"./NavBar.css\"\nimport requests from '../requests';\n\n\nconst pages = ['Home', 'Friends', 'My Profile', 'Post', 'Public Posts'];\nconst settings = ['Profile Settings', 'Logout'];\nconst links = {\"Home\": \"./inbox\", \"Friends\": \"./friends\", \"My Profile\": \"./profile\", \"Post\": \"./post\", \"Public Posts\": \"./public_posts\"}\nrequests.defaults.headers[\"Authorization\"] = localStorage.getItem('access_token');\n\nconst NavBar = () => {\n  const history = useHistory();\n  const currentPath = \".\" + useLocation()[\"pathname\"];\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  \n  React.useState(function checkAuthenticated() {\n    // TODO check and simplify this to for expired accessToken\n    const accessToken = localStorage.getItem(\"access_token\");\n    if (!accessToken) {\n        history.push(\"/\");\n        history.go(0);\n    }\n    // const response = requests.get('get-user/', {headers: {\n    //   accept: 'application/json',\n    // }}).then(data => {\n    //   if (data.status != 200) {\n    //     history.push(\"/\");\n    //   }\n    // }\n    // );\n    // if (!accessToken || status_code != 200) {\n    //   console.log(status_code);\n    //   console.log(\"HERE\");\n    //   history.push(\"/\");\n    // }\n  });\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const logout = async () => {\n    // send POST request to /logout\n    try {\n      const response = await requests.post('logout/', {headers: {\n        accept: 'application/json',\n      }});\n    } \n    catch(error) {\n      console.log(error);\n    }\n    localStorage.removeItem(\"access_token\");\n    history.push(\"/\")\n  }\n\n  const handleCloseUserMenu = (e) => {\n    // Handles the selected option\n    let selectedOption = e.currentTarget.innerText\n    switch(selectedOption) {\n      case \"Profile Settings\":\n        history.push('/profile');\n        break;\n      case \"Logout\":\n        logout();\n        break;\n    }\n    setAnchorElUser(null);\n  };\n\n\n  /* todo\n    -move nav bar options to left\n\n  */\n\n  return (\n    <AppBar position=\"static\" >\n      <Container maxWidth=\"100%\" >\n        <Toolbar disableGutters>\n          {/* NOTE: un-comment this out if we need a logo in the nav bar\n\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            LOGO\n          </Typography>\n          \n          */}\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <Link className=\"navLink\" to={links[page]}>\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography \n                    textAlign=\"center\" \n                    sx={links[page] === currentPath ? {my: 2, color: \"black\", display: 'block', fontWeight: \"bold\"} : {my: 2, color: \"rgba(0, 0, 0, 0.5)\", display: 'block'}}\n                  >\n                    {page}\n                  </Typography>\n                </MenuItem>\n                </Link>\n              ))}\n            </Menu>\n          </Box>\n          {/* NOTE: un-comment this out if we need a logo in the nav bar\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            LOGO\n          </Typography>\n          */}\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' }, }}>\n            {pages.map((page) => (\n              <Link className=\"navLink\" to={links[page]}>\n                <Button \n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={links[page] === currentPath ? {my: 2, color: \"white\", display: 'block', fontWeight: \"bold\"} : {my: 2, color: \"rgba(255, 255, 255, 0.5)\", display: 'block'}}\n                >\n                  {page}\n                </Button>\n              </Link>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"user\" src=\"\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default NavBar;\n","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/NewPost.js",[],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/PublicPosts.js",["321"],[],"import React from \"react\";\nimport requests from \"../../requests\";\nimport { Grid } from \"@mui/material\";\nimport Post from \"../Inbox/Post\";\n\n  \nclass PublicPosts extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        currentUser: {},\n        allPosts: {},\n    }\n}\n\n  componentDidMount() {\n      this.initializeDetails();\n  }\n\n  getAllPosts = async () => {\n    try {\n        // Get all the author details\n        const response = await requests.get(`authors/${this.state.currentUser.id}/posts/`, {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n        }});\n        \n        // get list of likes for each post\n        const postPromises = response.data.items.map(async (item) => {\n          if (item.type === 'post') {\n            const like_response = await requests.get(`authors/${item.author.id}/posts/${item.id}/likes/`);\n            item.likes = like_response.data.items;\n            item.likedByCurrent = false;\n            // check if current viewer liked the post\n            item.likes.forEach((like) => {\n              if (like.author === this.state.currentUser.id) {\n                item.likedByCurrent = true;\n              }\n            })\n          }\n          return item;\n        })\n        // wait for promises then set inbox list\n        const postList = await Promise.all(postPromises)\n        this.setState({ allPosts: postList });\n    } catch(error) {\n        console.log(error)\n    }\n  }\n\n  initializeDetails = async () => {\n      try {\n          // Get the author details\n          const response = await requests.get('get-user/', {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n          }});\n          this.setState({ currentUser: {\n              id: response.data.id ? response.data.id : '',\n              url: response.data.url ? response.data.url : '',\n              host: response.data.host ? response.data.host : '',\n              displayName: response.data.displayName ? response.data.displayName : '',\n              github: response.data.github ? response.data.github : '',\n              profileImage: response.data.profileImage ? response.data.profileImage : ''\n          }});\n\n        this.getAllPosts();\n\n      } catch(error) {\n          console.log(error)\n      }\n  }\n\n  renderInboxItems() {\n    return this.state.allPosts.map((item) => {\n        if (item.type === 'post') {\n          return (\n            <Grid item xs={8}>\n              <Post   \n              post= {item}\n              currentUser={this.state.currentUser}\n              likes={item.likes}\n              likedByCurrent={item.likedByCurrent}\n              isPublic={item.visibility === 'PUBLIC' && item.viewableBy === ''}\n              />\n            </Grid>\n          );\n        }\n    });\n  }\n\n  render(){\n      return (\n          <div className=\"PublicPosts\">\n            <Grid container p={2}\n            justifyContent=\"center\"\n            alignItem=\"center\"\n            direction=\"column\">\n            </Grid>\n          <Grid container spacing={2} justifyContent=\"center\" alignItem=\"center\">\n            {this.state.allPosts.length ? this.renderInboxItems() : <h2>Inbox is empty</h2>}\n          </Grid>\n          </div>\n      )\n  }\n}\n\nexport default PublicPosts;\n","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/Inbox.js",["322","323","324","325","326","327","328"],[],"import React from \"react\";\nimport requests from \"../../requests\";\nimport { Alert, Button, List, Grid, Box, TextField, Stack, ListItemText } from \"@mui/material\";\nimport FollowRequest from \"../Followers/FollowRequest\";\nimport LikeNotification from \"./LikeNotification\";\nimport CommentNotification from \"./CommentNotification\";\nimport Post from \"./Post\";\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n  \nclass Inbox extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        currentUser: {},\n        inboxList: [],\n    }\n}\n\n  componentDidMount() {\n      this.initializeDetails();\n  }\n\n  initializeDetails = async () => {\n      try {\n          // Get the author details\n          const response = await requests.get('get-user/', {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n          }});\n\n          this.setState({ currentUser: {\n            id: response.data.id ? response.data.id : '',\n            url: response.data.url ? response.data.url : '',\n            host: response.data.host ? response.data.host : '',\n            displayName: response.data.displayName ? response.data.displayName : '',\n            github: response.data.github ? response.data.github : '',\n            profileImage: response.data.profileImage ? response.data.profileImage : ''\n          }});\n\n          const response_inbox = await requests.get(`authors/${this.state.currentUser.id}/inbox/`,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n              }},\n              {withCredentials:true})\n\n\n          // get list of likes for each post\n          const inboxPromises = response_inbox.data.items.map(async (item) => {\n            if (item.type === 'post') {\n              const response = await requests.get(`authors/${item.author.id}/posts/${item.id}/likes/`);\n              item.likes = response.data.items;\n              item.likedByCurrent = false;\n              // check if current viewer liked the post\n              item.likes.forEach((like) => {\n                if (like.author === this.state.currentUser.id) {\n                  item.likedByCurrent = true;\n                }\n              })\n            }\n            return item;\n          })\n          // wait for promises then set inbox list\n          const inboxList = await Promise.all(inboxPromises)\n          this.setState({inboxList: inboxList})\n      } catch(error) {\n          console.log(error)\n      }\n  }\n\n  clearInbox = async () => {\n    try {\n      await requests.delete(`authors/${this.state.currentUser.id}/inbox/`,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n              }},\n              {withCredentials:true})\n      this.setState({inboxList: []})\n    } catch(error) {\n        console.log(error)\n    }\n  }\n\n  renderInboxItems() {\n    return this.state.inboxList.map((item) => {\n        if (item.type === 'post') {\n          return (\n            <Grid item xs={8}>\n              <Post\n              post= {item}\n              currentUser={this.state.currentUser}\n              likes={item.likes}\n              likedByCurrent={item.likedByCurrent}\n              isPublic={item.visibility === 'PUBLIC' && item.viewableBy === ''}\n              />\n            </Grid>\n          );\n        } else if (item.type === 'Follow') {\n          return (\n            <Grid item xs={8}>\n            <FollowRequest\n                displayName={item.actor.displayName}\n                profileImage={item.actor.profileImage}\n                currentUserId={this.state.currentUser.id}\n                id={item.actor.id}\n                accepted={item.accepted}\n            />\n            </Grid>\n          );\n        } else if (item.type === 'Like') {\n          return (\n            <Grid item xs={8}>\n            <LikeNotification\n              summary={item.summary}\n              profileImage={item.author.profileImage}\n              object={item.object}\n            />\n            </Grid>\n          );\n        } else if (item.type === 'comment') {\n          return (\n          <Grid item xs={8}>\n            <CommentNotification\n              profileImage={item.author.profileImage}\n              displayName={item.author.displayName}\n              owned={item.author.id === this.state.currentUser.id}\n              id={item.id}\n            />\n            </Grid>);\n        }\n    });\n  }\n\n  render(){\n      return (\n          <div className=\"inbox\">\n            <Grid container p={2}\n            justifyContent=\"center\"\n            alignItem=\"center\"\n            direction=\"column\">\n              <Button \n              variant=\"outlined\"\n              startIcon={<DeleteIcon />}\n              onClick={this.clearInbox}>\n                Clear inbox\n              </Button>\n            </Grid>\n          <Grid container spacing={2} justifyContent=\"center\" alignItem=\"center\">\n            {this.state.inboxList.length ? this.renderInboxItems() : <h2>Inbox is empty</h2>}\n          </Grid>\n          </div>\n      )\n  }\n}\n\nexport default Inbox;\n","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/LoginRegister/Register.js",["329","330","331","332","333","334"],[],"import React, { useEffect, useState, Component } from \"react\";\nimport {\n    Button,\n    TextField,\n    Alert,\n    AlertTitle\n  } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport { NavLink } from \"react-router-dom\";\n  \nclass Register extends Component {\n    state = {\n          username: \"\",\n          password: \"\",\n          confirm_password: \"\",\n          registration_error: false,\n          registration_success: false,\n          error_messages: \"\"\n      }\n\n    validateRegister() {\n        if (!this.state.username) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Username is empty\"})\n            return false\n        }\n        if (!this.state.password) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Password is Empty\"})\n            return false\n        }\n        if (!(this.state.password == this.state.confirm_password)) {\n            this.setState({registration_error: true})\n            this.setState({registration_success: false})\n            this.setState({error_messages: \"Passwords do not Match\"})\n            return false\n        }\n        return true;\n    }\n\n    handleRegister = async () => {\n        if(this.validateRegister()) {\n            try {\n                const response = await requests.post(`register/`, {\n                    username: this.state.username,\n                    password: this.state.password\n                });\n                this.setState({registration_error: false})\n                this.setState({registration_success: true})\n            }\n            catch {\n                this.setState({registration_error: true})\n                this.setState({registration_success: false})\n                this.setState({error_messages: \"Error occurred during registration\"})\n            }\n        }\n    }\n\n  render() {\n      return (\n          <body className=\"background\">\n          <div className=\"login-form\">\n          {this.state.registration_success&&<Alert className=\"alert\"  severity=\"success\">\n                <AlertTitle><strong>Account Successfully Created</strong></AlertTitle>\n            </Alert>}\n            {this.state.registration_error&&<Alert className=\"alert\"  severity=\"error\">\n                <AlertTitle><strong>{this.state.error_messages}</strong></AlertTitle>\n            </Alert>}\n            <h1>\n                Social Distributions\n            </h1>\n            <h3>\n                Create a new account\n            </h3>\n            <div className=\"login-wrapper\">\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Username\"\n                value={this.state.username}\n                onChange={({ target }) =>\n                this.setState({\n                username: target.value\n                })}\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                type=\"password\"\n                label=\"Password\"\n                value={this.state.password}\n                onChange={({ target }) =>\n                this.setState({\n                password: target.value\n                })}\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                type=\"password\"\n                label=\"Confirm Password\"\n                value={this.state.confirm_password}\n                onChange={({ target }) =>\n                this.setState({\n                confirm_password: target.value\n                })}\n            />\n            {/* {this.state.username_error&&<div>HI</div>} */}\n            <br/>\n            <Button\n                disabled={this.state.loginBtnDisabled}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={this.handleRegister}\n                ref={node => (this.btn = node)}>\n              Register\n            </Button>\n            <NavLink style={{ textDecoration: 'none', position: 'relative', top: '30px' }} to=\"/\">Have an account? Log in</NavLink>\n            </div>\n          </div>\n          </body>\n        );\n    }\n}\nexport default Register;\n","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/LoginRegister/login.js",["335","336","337","338"],[],"import React, { useEffect, Component } from \"react\";\n// import './App.css';\nimport {\n    Button,\n    TextField,\n    Alert,\n    AlertTitle\n  } from \"@mui/material\";\nimport \"../../styles/login-register.css\";\nimport requests from \"../../requests\";\nimport ProfileScreen from \"../AccountDetails/profileScreen\";\nimport {useHstory, Redirect, NavLink } from \"react-router-dom\";\n  \nclass Login extends Component {\n    state = {\n          username: \"\",\n          password: \"\",\n          successful_login: false,\n          error_login: false,\n          error_messages: \"\"\n      }\n\n    validateLogin() {\n        if (!this.state.username) {\n            this.setState({error_login: true})\n            this.setState({error_messages: \"Username is empty\"})\n            return false\n        }\n        if (!this.state.password) {\n            this.setState({error_login: true})\n            this.setState({error_messages: \"Password is Empty\"})\n            return false\n        }\n        return true;\n    }\n    handleLogin = async () => {\n        if (this.validateLogin()) {\n            try {\n                const response = await requests.post(`login/`, {\n                    username: this.state.username,\n                    password: this.state.password\n                }, {WithCredentials: true});\n                localStorage.setItem('access_token', response.data);\n                requests.defaults.headers['Authorization'] = localStorage.getItem('access_token');\n                this.setState({successful_login: true})\n            }\n            catch {\n                this.setState({error_login: true})\n                this.setState({error_messages: \"Username or password was incorrect\"})\n            }\n        }\n    }\n\n  render() {\n      return (\n          <body className=\"background\">\n          <div className=\"login-form\">\n          {this.state.error_login&&<Alert className=\"alert\"  severity=\"error\">\n                <AlertTitle><strong>{this.state.error_messages}</strong></AlertTitle>\n            </Alert>}\n            <h1>\n                Social Distributions\n            </h1>\n            <h3>\n                Please Log in to Continue\n            </h3>\n            <div className=\"login-wrapper\">\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Username\"\n                value={this.state.username}\n                onChange={({ target }) =>\n                this.setState({\n                username: target.value\n                })\n            }\n            />\n            <br/>\n            <TextField\n                className=\"text-input\"\n                size=\"small\"\n                type=\"text\"\n                label=\"Password\"\n                type=\"password\"\n                value={this.state.password}\n                onChange={({ target }) =>\n                    this.setState({\n                    password: target.value\n                    })\n                }\n            />\n            <br/>\n            <Button\n                disabled={this.state.loginBtnDisabled}\n                variant=\"contained\"\n                onClick={this.handleLogin}\n                ref={node => (this.btn = node)}>\n              Login\n            </Button>\n            {this.state.successful_login && <Redirect to=\"/inbox\" />}\n            </div>\n            <NavLink style={{ textDecoration: 'none', position: 'relative', top: '20px' }} to=\"/register\">Don't have an account? Sign Up</NavLink>\n          </div>\n          </body>\n        );\n    }\n}\n\nexport default Login;\n","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/FriendsPage.js",["339"],[],"import React from \"react\";\nimport requests from \"../../requests\";\nimport { Alert, Button, List, Grid, Box, TextField } from \"@mui/material\";\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport Follower from \"./Follower\";\nimport Following from \"./Following\";\n\n\nclass FriendsPage extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentUser: {},\n            followerList: [],\n            followingList: [],\n            addFollowerId: '',\n            addFollowerResult: {message:'', severity:''},\n        }\n    }\n\n    componentDidMount() {\n        this.initializeDetails();\n    }\n\n    initializeDetails = async () => {\n        try {\n            // Get the author details\n            const response = await requests.get('get-user/', {headers: {\n                Authorization: localStorage.getItem('access_token'),\n                accept: 'application/json',\n            }});\n            this.setState({ currentUser: {\n                id: response.data.id ? response.data.id : '',\n                url: response.data.url ? response.data.url : '',\n                host: response.data.host ? response.data.host : '',\n                displayName: response.data.displayName ? response.data.displayName : '',\n                github: response.data.github ? response.data.github : '',\n                profileImage: response.data.profileImage ? response.data.profileImage : ''\n            }});\n\n            const response_follower = await requests.get(`authors/${this.state.currentUser.id}/followers/`)\n            this.setState({followerList: response_follower.data.items})\n\n            const response_following = await requests.get(`authors/${this.state.currentUser.id}/following/`)\n            this.setState({followingList: response_following.data.items})\n        } catch(error) {\n            console.log(error)\n        }\n        \n    }\n\n    sendFollowRequest = async () => {\n        try {\n            const data = {\n                type: 'follow',\n                summary: `${this.state.currentUser.id} wants to follow ${this.state.addFollowerId}`,\n                object: `${this.state.addFollowerId}`\n            }\n            const response = await requests.post(`authors/${this.state.addFollowerId}/inbox/`,\n                data,\n                {headers: {\n                Authorization: localStorage.getItem('access_token'),\n                accept: 'application/json',\n                }},\n                {withCredentials:true})\n            this.setState({addFollowerResult: {message:\"Sent Follow Request\", severity:'success'}});\n        } catch(error) {\n            this.setState({addFollowerResult: {message:\"Failed to send Follow Request\", severity:'error'}});\n        }\n    }\n\n    setAddFollowerId = (e) => {\n        this.setState({addFollowerId: e.target.value});\n    }\n\n    renderFollowers() {\n        return this.state.followerList.map((follower) => {\n            return (\n                <Follower\n                    displayName={follower.displayName}\n                    profileImage={follower.profileImage}\n                    currentUserId={this.state.currentUser.id}\n                    id={follower.id}\n                />\n            );\n        });\n    }\n\n    renderFollowing() {\n        return this.state.followingList.map((follower) => {\n            return (\n                <Following\n                    displayName={follower.displayName}\n                    profileImage={follower.profileImage}\n                    currentUserId={this.state.currentUser.id}\n                    id={follower.id}\n                />\n            );\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"friendsPage\">\n            <Box\n                sx={{ display: 'flex',\n                       flexDirection: 'row',\n                       p: 2,\n                       m: 2,\n                       ml: 10,\n                       mr: 10,\n                       justifyContent: 'center'\n                    }}>\n                Send a Follow Request To:\n                <TextField \n                    fullWidth\n                    placeholder=\"Enter author ID\" \n                    id=\"outlined-basic\"\n                    onChange={this.setAddFollowerId}/>\n                <Button \n                sx={{ml: 2}}\n                startIcon={<PersonAddIcon />}\n                onClick={this.sendFollowRequest}>\n                Send\n                </Button>\n                {this.state.addFollowerResult && (\n                <Alert severity={this.state.addFollowerResult.severity}>\n                {this.state.addFollowerResult.message}\n                </Alert>\n                )}\n            </Box>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <h2>Followers</h2>\n                    <List>\n                        {this.renderFollowers()}\n                    </List>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <h2>Following</h2>\n                    <List>\n                        {this.renderFollowing()}\n                    </List>\n                </Grid>\n            </Grid>\n            </div>\n        )\n    }\n}\n\nexport default FriendsPage","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/AccountDetails/profileScreen.js",["340","341","342","343"],[],"import React from 'react'\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport Alert from '@mui/material/Alert'\nimport Typography from '@mui/material/Typography'\nimport requests from \"../../requests\";\nimport Table from \"@mui/material/Table\"\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport './profileScreen.css'\n\nclass ProfileScreen extends React.Component {\n    constructor(props){\n        super(props);\n        this.getAuthorDetails();\n    }\n    state = {author: {}, showSuccess: false};\n\n    getAuthorDetails = async () => {\n        // Get the author details\n        const response = await requests.get('get-user/', {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n          }});\n        this.setState({author: {\n            id: response.data.id ? response.data.id : '',\n            url: response.data.url ? response.data.url : '',\n            host: response.data.host ? response.data.host : '',\n            displayName: response.data.displayName ? response.data.displayName : '',\n            github: response.data.github ? response.data.github : '',\n            profileImage: response.data.profileImage ? response.data.profileImage : ''\n        }});\n    }\n\n    saveChangesPressed = async () => {\n        var updatesDict = {\"id\": this.state.author.id}\n        if (document.getElementById('url-input').value){\n            updatesDict[\"url\"] = document.getElementById('url-input').value;\n        }\n        if (document.getElementById('host-input').value){\n            updatesDict[\"host\"] = document.getElementById('host-input').value;\n        }\n        if (document.getElementById('displayName-input').value){\n            updatesDict[\"displayName\"] = document.getElementById('displayName-input').value;\n        }\n        if (document.getElementById('github-input').value){\n            updatesDict[\"github\"] = document.getElementById('github-input').value;\n        }\n        if (document.getElementById('profileImage-input').value){\n            updatesDict[\"profileImage\"] = document.getElementById('profileImage-input').value;\n        }\n        const response = await requests.post('authors/' + this.state.author.id + '/', updatesDict, {WithCredentials: true})\n\n        // Keep values that were not updated\n        const allKeys = Object.keys(this.state.author);\n        const updatedKeys = Object.keys(updatesDict);\n        for (let i = 0; i < allKeys.length; i++){\n            if (!updatedKeys.includes(allKeys[i])){\n                updatesDict[allKeys[i]] = this.state.author[allKeys[i]];\n            }\n        }\n            \n        // Update state\n        this.setState({author: updatesDict, showSuccess: true});\n        setTimeout(() => {\n            this.setState({showSuccess: false});\n        }, 2000);\n    }\n\n    createData(field, value) {\n        return { field, value };\n      }\n\n    render(){\n        var rows = [\n            this.createData('Url:', this.state.author.url),\n            this.createData('Host:', this.state.author.host),\n            this.createData('Display Name:', this.state.author.displayName),\n            this.createData('GitHub:', this.state.author.github),\n            this.createData('Profile Image:', this.state.author.profileImage),\n        ]\n        return (\n            <div className='ProfileScreen'>\n                <h1>My Profile</h1>\n                <span id='my-profile'>\n                    <img alt=\"Profile Image\" src={this.state.author.profileImage}></img>\n                    <div id='labels'>\n                    <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\n                        <TableBody>\n                        {rows.map((row) => (\n                            <TableRow\n                            key={row.field}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.field}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.value}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                    </div>\n                </span>\n                <h1>Edit Profile</h1>\n                <div id='inputs'>\n                    <TextField id=\"url-input\" label=\"New Url\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"host-input\" label=\"New Host\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"displayName-input\" label=\"New Display Name\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"github-input\" label=\"New GitHub\" variant=\"filled\" defaultValue=\"\"/>\n                    <TextField id=\"profileImage-input\" label=\"New ProfileImage\" variant=\"filled\" defaultValue=\"\"/>\n                </div>\n                <Button onClick={this.saveChangesPressed} variant=\"contained\">Save Changes</Button>\n                {this.state.showSuccess && <Alert severity=\"success\">\n                    Changes saved successfully\n                </Alert>}\n            </div>\n        )\n    }\n}\n\nexport default ProfileScreen","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/requests.js",[],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/Post.js",["344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362"],[],"import React, {useState, useEffect} from \"react\";\nimport requests from \"../../requests\";\nimport CommentDialogButton from \"../Posts/CommentDialog\";\nimport './Post.css'\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        ImageListItem,\n        TextField,\n        } from \"@mui/material\";\nimport ReactMarkdown from 'react-markdown'\nimport ThumbUp from '@mui/icons-material/ThumbUp'\nimport Send from '@mui/icons-material/Send'\nimport ShareIcon from '@mui/icons-material/Share';\nimport { ClassNames } from \"@emotion/react\";\n\n// assuming props contains all the post attributes\nexport default function Post(props) {\n  const [message, setMessage] = useState({});\n    const [commentText, setCommentText] = useState(\"\")\n    const [liked, setLiked] = useState(false)\n\n    const styles = theme => ({\n        listItemText:{\n          fontSize: '1',\n        }\n      });\n\n    const like = async () => {\n        // send POST request to authors/{authorId}/inbox/ with a like\n        try {\n          const data = {\n            summary: `${props.currentUser.displayName} likes your post.`,\n            type: \"Like\",\n            author: props.currentUser.id,\n            object: `${props.post.author.id}/posts/${props.post.id}`\n          }\n          // prevents sending a like twice when liking your own post\n          if (props.currentUser.id != props.post.author.id){\n            const response = await requests.post(`authors/${props.post.author.id}/inbox/`,\n              data,\n              {headers: {\n                Authorization: localStorage.getItem('access_token'),\n                accept: 'application/json',\n              }},\n              {withCredentials: true});\n          }\n          \n          // change summary of like, to send like to your own inbox\n          data.summary = `You liked ${props.post.author.displayName}'s post.`\n          sendToSelf(data);\n         setLiked(true)\n        } catch (e) {\n          console.log(e)\n          setMessage({message: \"Failed to send like.\", severity: \"error\"});\n        }   \n    }\n\n    const share = async () => {\n      try {\n        // if post is public, send to followers\n        if (props.isPublic) {\n          // add type to data\n          props.post.type = 'post'\n          sendToFollowers(props.post);\n        // if post is private, make a copy then send to followers\n        } else {\n          const url = \"authors/\" + props.currentUser.id + \"/posts/\";\n          const response = await requests.post(url, {\n          headers: {\n            accept: \"application/json\",\n          },\n          title: props.post.title,\n          author: props.currentUser.id,\n          contentType: props.post.contentType,\n          content: props.post.content,\n          description: props.post.description,\n          visibility: props.post.visibility,\n          unlisted: props.post.unlisted,\n          categories: props.post.categories,\n          viewableBy: '',\n        });\n\n        response.data.type = 'post'\n        sendToSelf(response.data)\n        sendToFollowers(response.data);\n        }\n      setMessage({message: \"Shared post to followers.\", severity: \"success\"});\n      } catch(e) {\n        setMessage({message: \"Failed to share post.\", severity: \"error\"});\n      }\n\n    }\n\n    const sendToFollowers = async (my_post) => {\n      // Get Followers\n      const response = await requests.get(\n        `authors/${props.currentUser.id}/followers/`\n      );\n      const followerList = response.data.items;\n  \n      // For each follower: send post to inbox\n      for (let index = 0; index < followerList.length; ++index) {\n        const follower = followerList[index];\n        await requests.post(\n          `authors/${follower.id}/inbox/`,\n          my_post,\n          {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n          }},\n          {withCredentials:true});\n      }\n    };\n  \n    // send a like or comment notification to your own inbox\n    const sendToSelf = async (my_item) => {\n      const response_self = await requests.post(\n        `authors/${props.currentUser.id}/inbox/`,\n        my_item,\n        {headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json',\n        }},\n        {withCredentials:true});\n    };\n\n    useEffect(() => {\n      setLiked(props.likedByCurrent);\n    }, [])\n\n    return (\n      <ListItem>\n        <ListItemText\n          id=\"title\"\n          primaryTypographyProps={{fontSize: '30px'}}\n          primary={props.post.title}\n        />\n        <ListItemText\n          id=\"author\"\n          primary={\"By: \" + props.post.author.displayName}\n        />\n        {props.post.contentType == \"text/markdown\" && <ReactMarkdown>\n          {props.post.content}\n          </ReactMarkdown>}\n        {(props.post.contentType == \"text/plain\") && <ListItemText\n          primary={props.post.content}\n        />}\n        {(props.post.contentType == \"application/base64\" || props.post.contentType == \"image/png;base64\" || props.post.contentType == \"image/jpeg;base64\") && <ImageListItem\n          children={<img src={props.post.content}></img>}\n        />}\n        <ListItemText\n          id=\"description\"\n          primary={props.post.description}\n        />\n        <div id=\"comment-like-section\">\n        {liked ? (<Button\n                    disabled\n                    variant=\"contained\">\n                      Liked\n                    </Button>)  \n            : (<Button \n              id=\"like-button\"\n              startIcon={<ThumbUp />}\n              onClick={like}>\n                  Like\n              </Button>)}\n            \n            <span id=\"comment-section\">\n                <CommentDialogButton\n                current_author = {props.currentUser.id}\n                post_id = {props.post.id}\n                author_id = {props.post.author}/>\n            </span>\n            <span id=\"share-section\">\n              <Button\n                variant=\"contained\"\n                startIcon={<ShareIcon />}\n                onClick={share}>\n                  Share\n              </Button>\n            </span>\n        {message.message && (\n        <Alert severity={message.severity}>\n          {message.message}\n        </Alert>\n        )}\n        </div>\n      </ListItem>\n    );\n}","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/CommentNotification.js",["363","364"],[],"import React, {useState} from \"react\";\n\nimport { Alert,\n        Avatar,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        } from \"@mui/material\";\n\n// like notification that appears in the inbox\nexport default function CommentNotification(props) {\n\n    return (\n      <ListItem button component=\"a\" href={props.id}>\n        <ListItemAvatar>\n          <Avatar\n          src={props.profileImage}\n          />\n        </ListItemAvatar>\n        {props.owned ? (<ListItemText primary=\"You commented on a post\"/>)  \n            : (<ListItemText primary={props.displayName + ' commented on your post'}/>)\n        }\n      </ListItem>\n    );\n}","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Inbox/LikeNotification.js",["365","366","367"],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/FollowRequest.js",["368","369","370","371"],[],"import React, {useState, useEffect} from \"react\";\nimport requests from \"../../requests\";\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        } from \"@mui/material\";\nimport ClearIcon from '@mui/icons-material/Clear'\nimport CheckIcon from '@mui/icons-material/Check'\n\n// assuming props contains all the author attributes of the person who\n// sent the follow request, and the id of the current user\nexport default function FollowRequest(props) {\n    const [message, setMessage] = useState({});\n    const [accepted, setAccepted] = useState(false);\n\n    const acceptFollowRequest = async () => {\n        // send PUT request to author_id/followers/follower_id\n        console.log('clicked accept');\n        try {\n          const response = await requests.put(`authors/${props.currentUserId}/followers/${props.id}/`,\n          {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n          }},\n          {withCredentials: true});\n          setMessage({message: \"Accepted follow request.\", severity: \"success\"});\n        } catch {\n          setMessage({message: \"Failed to accept follow request.\", severity: \"error\"});\n        }   \n    }\n\n\n    const rejectFollowRequest = async () => {\n        // send DELETE request to author_id/followers/follower_id\n        console.log('clicked reject')\n        try {\n          const response = await requests.delete(`authors/${props.currentUserId}/followers/${props.id}/`,\n          {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n          }},\n          {withCredentials: true});\n          setMessage({message: \"Rejected follow request.\", severity: \"success\"});\n        } catch {\n          setMessage({message: \"Failed to reject follow request.\", severity: \"error\"});\n        }   \n    }\n    useEffect(() => {\n      setAccepted(props.accepted);\n    }, [])\n\n    return (\n      <ListItem>\n        {message.message && (\n        <Alert severity={message.severity}>\n          {message.message}\n        </Alert>\n        )}\n        <ListItemAvatar>\n          <Avatar\n          src={props.profileImage}\n          />\n        </ListItemAvatar>\n        {accepted ? (<ListItemText primary={\"You accepted \" + props.displayName + \"\\'s follow request\"}/>)  \n            : (<ListItemText primary={props.displayName + \" wants to follow you\"}\n        />)}\n        {!accepted && <ListItemSecondaryAction>\n          <Button \n            startIcon={<CheckIcon />}\n            onClick={acceptFollowRequest}>\n              Accept\n          </Button>\n          <Button \n            startIcon={<ClearIcon />}\n            onClick={rejectFollowRequest}>\n              Reject\n          </Button>\n        </ListItemSecondaryAction>}\n      </ListItem>\n    );\n}","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/Following.js",["372"],[],"import React, {useState} from \"react\";\nimport requests from \"../../requests\";\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        } from \"@mui/material\";\nimport ClearIcon from '@mui/icons-material/Clear'\n\n// assuming props contains all the author attributes of the follower, and the id of the current user\nexport default function Following(props) {\n    const [message, setMessage] = useState({});\n\n    const unfollow = async () => {\n        // send DELETE request to\n        try {\n          const response = await requests.delete(`authors/${props.id}/followers/${props.currentUserId}/`,\n          {headers: {\n            Authorization: localStorage.getItem('access_token'),\n            accept: 'application/json',\n            }},\n            {withCredentials: true});\n          setMessage({message: \"Unfollowed.\", severity: \"success\"});\n        } catch {\n          setMessage({message: \"Failed to unfollow.\", severity: \"error\"});\n        }   \n    }\n    return (\n      <ListItem divider>\n        {message.message && (\n        <Alert severity={message.severity}>\n          {message.message}\n        </Alert>\n        )}\n        <ListItemAvatar>\n          <Avatar\n          src={props.profileImage}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={props.displayName}\n        />\n        <ListItemSecondaryAction>\n          <Button \n            startIcon={<ClearIcon />}\n            onClick={unfollow}>\n              Unfollow\n          </Button>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n}","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Followers/Follower.js",["373"],[],"import React, {useState} from \"react\";\nimport requests from \"../../requests\";\n\nimport { Alert,\n        Avatar,\n        Button,\n        ListItem,\n        ListItemAvatar,\n        ListItemText,\n        ListItemSecondaryAction,\n        } from \"@mui/material\";\nimport ClearIcon from '@mui/icons-material/Clear'\n\n// assuming props contains all the author attributes of the follower, and the id of the current user\nexport default function Follower(props) {\n    const [message, setMessage] = useState({});\n\n    const removeFollower = async () => {\n        // send DELETE request to author_id/followers/follower_id\n        try {\n          const response = await requests.delete(`authors/${props.currentUserId}/followers/${props.id}/`,\n          {headers: {\n                Authorization: localStorage.getItem('access_token'),\n                accept: 'application/json',\n          }},\n          {withCredentials: true});\n          setMessage({message: \"Unfollowed.\", severity: \"success\"});\n        } catch {\n          setMessage({message: \"Failed to unfollow.\", severity: \"error\"});\n        }   \n    }\n    return (\n      <ListItem divider>\n        {message.message && (\n        <Alert severity={message.severity}>\n          {message.message}\n        </Alert>\n        )}\n        <ListItemAvatar>\n          <Avatar\n          src={props.profileImage}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={props.displayName}\n        />\n        <ListItemSecondaryAction>\n          <Button \n            startIcon={<ClearIcon />}\n            onClick={removeFollower}>\n              Remove\n          </Button>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n}","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/constants.js",[],[],"/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/CommentDialog.js",["374","375","376","377","378"],[],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { blue } from '@mui/material/colors';\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport './CommentDialog.css';\nimport {EditComment, AddCommentListItem} from './AddComment';\nimport requests from '../../requests';\nimport { usePreviousProps } from '@mui/utils';\n\nexport default function CommentDialogButton(props) {\n  const [open, setOpen] = React.useState(false);\n  const [comments, setComments] = React.useState(0);\n  const [commenters, setCommenters] = React.useState(0);\n  const [ids, setCommentIds] = React.useState(0); \n\n  const getComments = async () => {\n    try {\n      const response = await requests.get(`authors/${props.author_id}/posts/${props.post_id}/comments/`,\n      {headers: {\n      Authorization: localStorage.getItem('access_token'),\n      accept: 'application/json',\n      }},\n      {withCredentials:true});\n      console.log(response.data.items);\n      var ids = [];\n      var commenter_ids = [];\n      var comment_ids = [];\n      response.data.items.forEach((comment) =>  {\n        ids.push(comment.comment);\n        commenter_ids.push(comment.author);\n        comment_ids.push(comment.id);\n      });\n      setComments(ids);\n      setCommenters(commenter_ids);\n      setCommentIds(comment_ids);\n    }\n    catch(error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    getComments();\n  }, []);\n\n\nconst handleClickOpen = async () => {\n    setOpen(true);\n};\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        View Comments\n      </Button>\n      <CommentDialog\n        current_author = {props.current_author}\n        author_id = {props.author_id}\n        open={open}\n        onClose={handleClose}\n        post_id = {props.post_id}\n        comments = {comments}\n        commenters = {commenters}\n        comment_id = {ids}\n      />\n    </div>\n  );\n}\n\nfunction CommentDialog(props) {\n\n  var authors = props.commenters ? props.commenters : [];\n  var comments = props.comments ? props.comments : [];\n  const { onClose, selectedValue, open } = props;\n  const [commentText, setCommentText] = React.useState(\"\")\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  // Handles the deletion of a comment within the dialog listview after confirmation\n  const handleDelete = async (index) => {\n    // TODO switch to an actual confirm dialogue\n    if (window.confirm(\"Do you really want to delete this comment?\")) {\n    try {\n      var comment_id = props.comment_id[index]\n      const response = await requests.delete(`authors/${props.author_id}/posts/${props.post_id}/comments/${comment_id}/`,\n      {headers: {\n      Authorization: localStorage.getItem('access_token'),\n      accept: 'application/json',\n      }},\n      {withCredentials:true});\n    }\n    catch(error) {\n      console.log(error);\n    }\n  }\n}\n\n  return (\n    <Dialog onClose={handleClose} maxWidth=\"800px\" open={open}>\n      <DialogTitle className=\"comment-dialog\">Comments</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {authors.map((author, index) => (\n          <ListItem button key={author}>\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={`${author}: ${comments[index]}`} />\n            {author === props.current_author ? \n            <EditComment\n              current_author = {props.current_author}\n              post_author = {props.author_id}\n              post_id = {props.post_id}\n              comment_id = {props.comment_id[index]}/> : ''}\n            {author === props.current_author ? <Button className = \"comment-button\" color = \"error\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={() => handleDelete(index)}>\n              Delete\n            </Button> : ''}\n          </ListItem>\n        ))}\n        <AddCommentListItem\n        current_author = {props.current_author}\n        post_author = {props.author_id}\n        post_id = {props.post_id}/>\n      </List>\n    </Dialog>\n  );\n}\n\nCommentDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};","/Users/victorlieu/Desktop/Development/reactdeploy/frontend/src/components/Posts/AddComment.js",["379","380","381"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport './CommentDialog.css';\nimport requests from '../../requests';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport function EditComment(props) {\n  const [open, setOpen] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setComment('');\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = async () => {\n        // send PUT request to authors/{authorId}/posts/{postId}/comments/{commentId} with new comment\n        try {\n        const response = await requests.put(`authors/${props.post_author}/posts/${props.post_id}/comments/${props.comment_id}/`,\n            {\n            comment: comment\n            },\n            {headers: {\n                Authorization: localStorage.getItem('access_token'),\n                accept: 'application/json',\n            }\n            },\n            {withCredentials: true});\n    } catch(e) {\n        console.log(e)\n    }\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClickOpen} endIcon={<EditIcon />}>\n        Edit\n      </Button>\n      <Dialog open={open} minWidth=\"800px\" maxWidth=\"800px\" hideBackdrop={true} onClose={handleClose}>\n        <DialogTitle className=\"comment-dialog\">Edit Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue=\"Normal\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Comment\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={comment}\n            onChange={(event) => {setComment(event.target.value)}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleEdit}>Update</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport function AddCommentListItem(props) {\n    const [open, setOpen] = React.useState(false);\n    const [comment, setComment] = React.useState('');\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n      setComment('');\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const handleSend = async () => {\n        // send POST request to authors/{authorId}/posts/{postId}/comments/ with a comment\n        try {\n            const response = await requests.post(`authors/${props.post_author}/posts/${props.post_id}/comments/`,\n              {\n              post_id: props.post_id,\n              comment: comment,\n              contentType: \"text/markdown\",\n              author: props.current_author,\n              type: \"comment\"\n              },\n              {headers: {\n                  Authorization: localStorage.getItem('access_token'),\n                  accept: 'application/json',\n                }\n              },\n              {withCredentials: true});\n            sendToSelf(response.data);\n            // send to recipients inbox\n            const response_recipient = await requests.post(`authors/${props.post_author}/inbox/`,\n            response.data,\n            {headers: {\n              Authorization: localStorage.getItem('access_token'),\n              accept: 'application/json',\n            }\n            },\n          {withCredentials: true})\n        } catch(e) {\n          console.log(e)\n        }\n        handleClose();\n    }\n  \n    const sendToSelf = async (my_item) => {\n      const response_self = await requests.post(\n        `authors/${props.current_author}/inbox/`,\n        my_item,\n        {headers: {\n          Authorization: localStorage.getItem('access_token'),\n          accept: 'application/json',\n        }},\n        {withCredentials:true});\n    };\n  \n    return (\n      <div>\n        <ListItem autoFocus button onClick={() => handleClickOpen()}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add Comment\" />\n        </ListItem>\n        <Dialog open={open} minWidth=\"800px\" maxWidth=\"800px\" hideBackdrop={true} onClose={handleClose}>\n        <DialogTitle className=\"comment-dialog\">Add new comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue=\"Normal\"\n            placeholder=\"Write a comment...\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Comment\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={comment}\n            onChange={(event) => {setComment(event.target.value)}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSend}>Send</Button>\n        </DialogActions>\n      </Dialog>\n      </div>\n    );\n  }",{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","replacedBy":"385"},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"390","line":1,"column":28,"nodeType":"388","messageId":"389","endLine":1,"endColumn":36},{"ruleId":"386","severity":1,"message":"391","line":11,"column":42,"nodeType":"388","messageId":"389","endLine":11,"endColumn":48},{"ruleId":"386","severity":1,"message":"392","line":11,"column":57,"nodeType":"388","messageId":"389","endLine":11,"endColumn":63},{"ruleId":"382","replacedBy":"393"},{"ruleId":"384","replacedBy":"394"},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"395","line":11,"column":8,"nodeType":"388","messageId":"389","endLine":11,"endColumn":21},{"ruleId":"386","severity":1,"message":"396","line":12,"column":9,"nodeType":"388","messageId":"389","endLine":12,"endColumn":18},{"ruleId":"397","severity":1,"message":"398","line":86,"column":17,"nodeType":"399","messageId":"400","endLine":86,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"390","line":1,"column":28,"nodeType":"388","messageId":"389","endLine":1,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":35,"column":35,"nodeType":"403","messageId":"404","endLine":35,"endColumn":37},{"ruleId":"386","severity":1,"message":"405","line":47,"column":23,"nodeType":"388","messageId":"389","endLine":47,"endColumn":31},{"ruleId":"397","severity":1,"message":"398","line":95,"column":17,"nodeType":"399","messageId":"400","endLine":95,"endColumn":32},{"ruleId":"397","severity":1,"message":"398","line":108,"column":17,"nodeType":"399","messageId":"400","endLine":108,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"406","line":9,"column":9,"nodeType":"388","messageId":"389","endLine":9,"endColumn":19},{"ruleId":"397","severity":1,"message":"398","line":70,"column":17,"nodeType":"399","messageId":"400","endLine":70,"endColumn":32},{"ruleId":"382","replacedBy":"407"},{"ruleId":"384","replacedBy":"408"},{"ruleId":"386","severity":1,"message":"409","line":3,"column":10,"nodeType":"388","messageId":"389","endLine":3,"endColumn":15},{"ruleId":"386","severity":1,"message":"410","line":3,"column":25,"nodeType":"388","messageId":"389","endLine":3,"endColumn":29},{"ruleId":"386","severity":1,"message":"411","line":3,"column":37,"nodeType":"388","messageId":"389","endLine":3,"endColumn":40},{"ruleId":"386","severity":1,"message":"412","line":3,"column":42,"nodeType":"388","messageId":"389","endLine":3,"endColumn":51},{"ruleId":"386","severity":1,"message":"413","line":3,"column":53,"nodeType":"388","messageId":"389","endLine":3,"endColumn":58},{"ruleId":"386","severity":1,"message":"414","line":3,"column":60,"nodeType":"388","messageId":"389","endLine":3,"endColumn":72},{"ruleId":"415","severity":1,"message":"416","line":87,"column":44,"nodeType":"417","messageId":"418","endLine":87,"endColumn":46},{"ruleId":"386","severity":1,"message":"419","line":5,"column":8,"nodeType":"388","messageId":"389","endLine":5,"endColumn":18},{"ruleId":"386","severity":1,"message":"420","line":10,"column":8,"nodeType":"388","messageId":"389","endLine":10,"endColumn":17},{"ruleId":"386","severity":1,"message":"405","line":54,"column":15,"nodeType":"388","messageId":"389","endLine":54,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":88,"column":21,"nodeType":"423","endLine":88,"endColumn":83},{"ruleId":"386","severity":1,"message":"405","line":70,"column":13,"nodeType":"388","messageId":"389","endLine":70,"endColumn":21},{"ruleId":"424","severity":1,"message":"425","line":84,"column":5,"nodeType":"426","messageId":"427","endLine":91,"endColumn":6},{"ruleId":"386","severity":1,"message":"405","line":59,"column":19,"nodeType":"388","messageId":"389","endLine":59,"endColumn":27},{"ruleId":"386","severity":1,"message":"405","line":21,"column":17,"nodeType":"388","messageId":"389","endLine":21,"endColumn":25},{"ruleId":"386","severity":1,"message":"405","line":21,"column":17,"nodeType":"388","messageId":"389","endLine":21,"endColumn":25},{"ruleId":"386","severity":1,"message":"405","line":25,"column":17,"nodeType":"388","messageId":"389","endLine":25,"endColumn":25},{"ruleId":"386","severity":1,"message":"405","line":42,"column":17,"nodeType":"388","messageId":"389","endLine":42,"endColumn":25},{"ruleId":"428","severity":1,"message":"429","line":55,"column":8,"nodeType":"430","endLine":55,"endColumn":10,"suggestions":"431"},{"ruleId":"432","severity":1,"message":"433","line":69,"column":84,"nodeType":"434","messageId":"435","endLine":69,"endColumn":85,"suggestions":"436"},{"ruleId":"386","severity":1,"message":"437","line":7,"column":9,"nodeType":"388","messageId":"389","endLine":7,"endColumn":15},{"ruleId":"386","severity":1,"message":"438","line":10,"column":9,"nodeType":"388","messageId":"389","endLine":10,"endColumn":23},{"ruleId":"386","severity":1,"message":"439","line":12,"column":9,"nodeType":"388","messageId":"389","endLine":12,"endColumn":32},{"ruleId":"386","severity":1,"message":"412","line":14,"column":9,"nodeType":"388","messageId":"389","endLine":14,"endColumn":18},{"ruleId":"386","severity":1,"message":"440","line":18,"column":8,"nodeType":"388","messageId":"389","endLine":18,"endColumn":12},{"ruleId":"386","severity":1,"message":"441","line":20,"column":10,"nodeType":"388","messageId":"389","endLine":20,"endColumn":20},{"ruleId":"386","severity":1,"message":"442","line":25,"column":12,"nodeType":"388","messageId":"389","endLine":25,"endColumn":23},{"ruleId":"386","severity":1,"message":"443","line":25,"column":25,"nodeType":"388","messageId":"389","endLine":25,"endColumn":39},{"ruleId":"386","severity":1,"message":"444","line":28,"column":11,"nodeType":"388","messageId":"389","endLine":28,"endColumn":17},{"ruleId":"401","severity":1,"message":"445","line":44,"column":36,"nodeType":"403","messageId":"404","endLine":44,"endColumn":38},{"ruleId":"386","severity":1,"message":"405","line":45,"column":19,"nodeType":"388","messageId":"389","endLine":45,"endColumn":27},{"ruleId":"386","severity":1,"message":"446","line":123,"column":13,"nodeType":"388","messageId":"389","endLine":123,"endColumn":26},{"ruleId":"428","severity":1,"message":"447","line":135,"column":8,"nodeType":"430","endLine":135,"endColumn":10,"suggestions":"448"},{"ruleId":"401","severity":1,"message":"402","line":148,"column":33,"nodeType":"403","messageId":"404","endLine":148,"endColumn":35},{"ruleId":"401","severity":1,"message":"402","line":151,"column":34,"nodeType":"403","messageId":"404","endLine":151,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":154,"column":34,"nodeType":"403","messageId":"404","endLine":154,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":154,"column":84,"nodeType":"403","messageId":"404","endLine":154,"endColumn":86},{"ruleId":"401","severity":1,"message":"402","line":154,"column":132,"nodeType":"403","messageId":"404","endLine":154,"endColumn":134},{"ruleId":"449","severity":1,"message":"450","line":155,"column":21,"nodeType":"423","endLine":155,"endColumn":51},{"ruleId":"386","severity":1,"message":"390","line":1,"column":16,"nodeType":"388","messageId":"389","endLine":1,"endColumn":24},{"ruleId":"386","severity":1,"message":"409","line":3,"column":10,"nodeType":"388","messageId":"389","endLine":3,"endColumn":15},{"ruleId":"386","severity":1,"message":"390","line":1,"column":16,"nodeType":"388","messageId":"389","endLine":1,"endColumn":24},{"ruleId":"386","severity":1,"message":"409","line":3,"column":10,"nodeType":"388","messageId":"389","endLine":3,"endColumn":15},{"ruleId":"386","severity":1,"message":"451","line":9,"column":8,"nodeType":"388","messageId":"389","endLine":9,"endColumn":20},{"ruleId":"415","severity":1,"message":"416","line":75,"column":43,"nodeType":"417","messageId":"418","endLine":75,"endColumn":45},{"ruleId":"386","severity":1,"message":"405","line":33,"column":15,"nodeType":"388","messageId":"389","endLine":33,"endColumn":23},{"ruleId":"386","severity":1,"message":"452","line":111,"column":19,"nodeType":"388","messageId":"389","endLine":111,"endColumn":37},{"ruleId":"386","severity":1,"message":"446","line":126,"column":13,"nodeType":"388","messageId":"389","endLine":126,"endColumn":26},{"ruleId":"386","severity":1,"message":"453","line":17,"column":10,"nodeType":"388","messageId":"389","endLine":17,"endColumn":26},{"ruleId":"428","severity":1,"message":"454","line":53,"column":6,"nodeType":"430","endLine":53,"endColumn":8,"suggestions":"455"},{"ruleId":"386","severity":1,"message":"442","line":88,"column":10,"nodeType":"388","messageId":"389","endLine":88,"endColumn":21},{"ruleId":"386","severity":1,"message":"443","line":88,"column":23,"nodeType":"388","messageId":"389","endLine":88,"endColumn":37},{"ruleId":"386","severity":1,"message":"405","line":100,"column":13,"nodeType":"388","messageId":"389","endLine":100,"endColumn":21},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"390","line":1,"column":28,"nodeType":"388","messageId":"389","endLine":1,"endColumn":36},{"ruleId":"386","severity":1,"message":"391","line":11,"column":42,"nodeType":"388","messageId":"389","endLine":11,"endColumn":48},{"ruleId":"386","severity":1,"message":"392","line":11,"column":57,"nodeType":"388","messageId":"389","endLine":11,"endColumn":63},{"ruleId":"386","severity":1,"message":"405","line":70,"column":13,"nodeType":"388","messageId":"389","endLine":70,"endColumn":21},{"ruleId":"424","severity":1,"message":"425","line":84,"column":5,"nodeType":"426","messageId":"427","endLine":91,"endColumn":6},{"ruleId":"415","severity":1,"message":"416","line":75,"column":43,"nodeType":"417","messageId":"418","endLine":75,"endColumn":45},{"ruleId":"386","severity":1,"message":"409","line":3,"column":10,"nodeType":"388","messageId":"389","endLine":3,"endColumn":15},{"ruleId":"386","severity":1,"message":"410","line":3,"column":25,"nodeType":"388","messageId":"389","endLine":3,"endColumn":29},{"ruleId":"386","severity":1,"message":"411","line":3,"column":37,"nodeType":"388","messageId":"389","endLine":3,"endColumn":40},{"ruleId":"386","severity":1,"message":"412","line":3,"column":42,"nodeType":"388","messageId":"389","endLine":3,"endColumn":51},{"ruleId":"386","severity":1,"message":"413","line":3,"column":53,"nodeType":"388","messageId":"389","endLine":3,"endColumn":58},{"ruleId":"386","severity":1,"message":"414","line":3,"column":60,"nodeType":"388","messageId":"389","endLine":3,"endColumn":72},{"ruleId":"415","severity":1,"message":"416","line":87,"column":44,"nodeType":"417","messageId":"418","endLine":87,"endColumn":46},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"390","line":1,"column":28,"nodeType":"388","messageId":"389","endLine":1,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":35,"column":35,"nodeType":"403","messageId":"404","endLine":35,"endColumn":37},{"ruleId":"386","severity":1,"message":"405","line":47,"column":23,"nodeType":"388","messageId":"389","endLine":47,"endColumn":31},{"ruleId":"397","severity":1,"message":"398","line":95,"column":17,"nodeType":"399","messageId":"400","endLine":95,"endColumn":32},{"ruleId":"397","severity":1,"message":"398","line":108,"column":17,"nodeType":"399","messageId":"400","endLine":108,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":1,"column":17,"nodeType":"388","messageId":"389","endLine":1,"endColumn":26},{"ruleId":"386","severity":1,"message":"395","line":11,"column":8,"nodeType":"388","messageId":"389","endLine":11,"endColumn":21},{"ruleId":"386","severity":1,"message":"396","line":12,"column":9,"nodeType":"388","messageId":"389","endLine":12,"endColumn":18},{"ruleId":"397","severity":1,"message":"398","line":86,"column":17,"nodeType":"399","messageId":"400","endLine":86,"endColumn":32},{"ruleId":"386","severity":1,"message":"405","line":59,"column":19,"nodeType":"388","messageId":"389","endLine":59,"endColumn":27},{"ruleId":"386","severity":1,"message":"419","line":5,"column":8,"nodeType":"388","messageId":"389","endLine":5,"endColumn":18},{"ruleId":"386","severity":1,"message":"420","line":10,"column":8,"nodeType":"388","messageId":"389","endLine":10,"endColumn":17},{"ruleId":"386","severity":1,"message":"405","line":54,"column":15,"nodeType":"388","messageId":"389","endLine":54,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":88,"column":21,"nodeType":"423","endLine":88,"endColumn":83},{"ruleId":"386","severity":1,"message":"437","line":7,"column":9,"nodeType":"388","messageId":"389","endLine":7,"endColumn":15},{"ruleId":"386","severity":1,"message":"438","line":10,"column":9,"nodeType":"388","messageId":"389","endLine":10,"endColumn":23},{"ruleId":"386","severity":1,"message":"439","line":12,"column":9,"nodeType":"388","messageId":"389","endLine":12,"endColumn":32},{"ruleId":"386","severity":1,"message":"412","line":14,"column":9,"nodeType":"388","messageId":"389","endLine":14,"endColumn":18},{"ruleId":"386","severity":1,"message":"440","line":18,"column":8,"nodeType":"388","messageId":"389","endLine":18,"endColumn":12},{"ruleId":"386","severity":1,"message":"441","line":20,"column":10,"nodeType":"388","messageId":"389","endLine":20,"endColumn":20},{"ruleId":"386","severity":1,"message":"442","line":25,"column":12,"nodeType":"388","messageId":"389","endLine":25,"endColumn":23},{"ruleId":"386","severity":1,"message":"443","line":25,"column":25,"nodeType":"388","messageId":"389","endLine":25,"endColumn":39},{"ruleId":"386","severity":1,"message":"444","line":28,"column":11,"nodeType":"388","messageId":"389","endLine":28,"endColumn":17},{"ruleId":"401","severity":1,"message":"445","line":44,"column":36,"nodeType":"403","messageId":"404","endLine":44,"endColumn":38},{"ruleId":"386","severity":1,"message":"405","line":45,"column":19,"nodeType":"388","messageId":"389","endLine":45,"endColumn":27},{"ruleId":"386","severity":1,"message":"446","line":123,"column":13,"nodeType":"388","messageId":"389","endLine":123,"endColumn":26},{"ruleId":"428","severity":1,"message":"447","line":135,"column":8,"nodeType":"430","endLine":135,"endColumn":10,"suggestions":"456"},{"ruleId":"401","severity":1,"message":"402","line":148,"column":33,"nodeType":"403","messageId":"404","endLine":148,"endColumn":35},{"ruleId":"401","severity":1,"message":"402","line":151,"column":34,"nodeType":"403","messageId":"404","endLine":151,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":154,"column":34,"nodeType":"403","messageId":"404","endLine":154,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":154,"column":84,"nodeType":"403","messageId":"404","endLine":154,"endColumn":86},{"ruleId":"401","severity":1,"message":"402","line":154,"column":132,"nodeType":"403","messageId":"404","endLine":154,"endColumn":134},{"ruleId":"449","severity":1,"message":"450","line":155,"column":21,"nodeType":"423","endLine":155,"endColumn":51},{"ruleId":"386","severity":1,"message":"390","line":1,"column":16,"nodeType":"388","messageId":"389","endLine":1,"endColumn":24},{"ruleId":"386","severity":1,"message":"409","line":3,"column":10,"nodeType":"388","messageId":"389","endLine":3,"endColumn":15},{"ruleId":"386","severity":1,"message":"390","line":1,"column":16,"nodeType":"388","messageId":"389","endLine":1,"endColumn":24},{"ruleId":"386","severity":1,"message":"409","line":3,"column":10,"nodeType":"388","messageId":"389","endLine":3,"endColumn":15},{"ruleId":"386","severity":1,"message":"451","line":9,"column":8,"nodeType":"388","messageId":"389","endLine":9,"endColumn":20},{"ruleId":"386","severity":1,"message":"405","line":25,"column":17,"nodeType":"388","messageId":"389","endLine":25,"endColumn":25},{"ruleId":"386","severity":1,"message":"405","line":42,"column":17,"nodeType":"388","messageId":"389","endLine":42,"endColumn":25},{"ruleId":"428","severity":1,"message":"429","line":55,"column":8,"nodeType":"430","endLine":55,"endColumn":10,"suggestions":"457"},{"ruleId":"432","severity":1,"message":"433","line":69,"column":84,"nodeType":"434","messageId":"435","endLine":69,"endColumn":85,"suggestions":"458"},{"ruleId":"386","severity":1,"message":"405","line":21,"column":17,"nodeType":"388","messageId":"389","endLine":21,"endColumn":25},{"ruleId":"386","severity":1,"message":"405","line":21,"column":17,"nodeType":"388","messageId":"389","endLine":21,"endColumn":25},{"ruleId":"386","severity":1,"message":"453","line":17,"column":10,"nodeType":"388","messageId":"389","endLine":17,"endColumn":26},{"ruleId":"428","severity":1,"message":"454","line":53,"column":6,"nodeType":"430","endLine":53,"endColumn":8,"suggestions":"459"},{"ruleId":"386","severity":1,"message":"442","line":88,"column":10,"nodeType":"388","messageId":"389","endLine":88,"endColumn":21},{"ruleId":"386","severity":1,"message":"443","line":88,"column":23,"nodeType":"388","messageId":"389","endLine":88,"endColumn":37},{"ruleId":"386","severity":1,"message":"405","line":100,"column":13,"nodeType":"388","messageId":"389","endLine":100,"endColumn":21},{"ruleId":"386","severity":1,"message":"405","line":33,"column":15,"nodeType":"388","messageId":"389","endLine":33,"endColumn":23},{"ruleId":"386","severity":1,"message":"452","line":111,"column":19,"nodeType":"388","messageId":"389","endLine":111,"endColumn":37},{"ruleId":"386","severity":1,"message":"446","line":126,"column":13,"nodeType":"388","messageId":"389","endLine":126,"endColumn":26},"no-native-reassign",["460"],"no-negated-in-lhs",["461"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.",["460"],["461"],"'ProfileScreen' is defined but never used.","'useHstory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'response' is assigned a value but never used.","'useHistory' is defined but never used.",["460"],["461"],"'Alert' is defined but never used.","'List' is defined but never used.","'Box' is defined but never used.","'TextField' is defined but never used.","'Stack' is defined but never used.","'ListItemText' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Typography' is defined but never used.","'TableHead' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.accepted'. Either include it or remove the dependency array. If 'setAccepted' needs the current value of 'props.accepted', you can also switch to useReducer instead of useState and read 'props.accepted' in the reducer.","ArrayExpression",["462"],"no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["463","464"],"'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Send' is defined but never used.","'ClassNames' is defined but never used.","'commentText' is assigned a value but never used.","'setCommentText' is assigned a value but never used.","'styles' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'response_self' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.likedByCurrent'. Either include it or remove the dependency array. If 'setLiked' needs the current value of 'props.likedByCurrent', you can also switch to useReducer instead of useState and read 'props.likedByCurrent' in the reducer.",["465"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FavoriteIcon' is defined but never used.","'response_recipient' is assigned a value but never used.","'usePreviousProps' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["466"],["467"],["468"],["469","470"],["471"],"no-global-assign","no-unsafe-negation",{"desc":"472","fix":"473"},{"messageId":"474","fix":"475","desc":"476"},{"messageId":"477","fix":"478","desc":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"480","fix":"484"},{"desc":"472","fix":"485"},{"messageId":"474","fix":"486","desc":"476"},{"messageId":"477","fix":"487","desc":"479"},{"desc":"482","fix":"488"},"Update the dependencies array to be: [props.accepted]",{"range":"489","text":"490"},"removeEscape",{"range":"491","text":"492"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"493","text":"494"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.likedByCurrent]",{"range":"495","text":"496"},"Update the dependencies array to be: [getComments]",{"range":"497","text":"498"},{"range":"499","text":"496"},{"range":"500","text":"490"},{"range":"501","text":"492"},{"range":"502","text":"494"},{"range":"503","text":"498"},[2016,2018],"[props.accepted]",[2381,2382],"",[2381,2381],"\\",[4450,4452],"[props.likedByCurrent]",[1848,1850],"[getComments]",[4450,4452],[2016,2018],[2381,2382],[2381,2381],[1848,1850]]